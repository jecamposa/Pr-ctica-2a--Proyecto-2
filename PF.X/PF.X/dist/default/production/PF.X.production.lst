

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Apr 06 12:29:51 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F46K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56  0000                     
    57                           ; Version 2.36
    58                           ; Generated 28/01/2022 GMT
    59                           ; 
    60                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution. Publication is not required when
    74                           ;        this file is used in an embedded application.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F46K40 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataCOMRAM
    94  001864                     __pidataCOMRAM:
    95                           	callstack 0
    96                           
    97                           ;initializer for _select
    98  001864  0001               	dw	1
    99                           
   100                           	psect	smallconst
   101  000F00                     __psmallconst:
   102                           	callstack 0
   103  000F00  00                 	db	0
   104  000F01                     _spi1_configuration:
   105                           	callstack 0
   106  000F01  00                 	db	0
   107  000F02  40                 	db	64
   108  000F03  01                 	db	1
   109  000F04  00                 	db	0
   110  000F05                     __end_of_spi1_configuration:
   111                           	callstack 0
   112  0000                     _ADERRL	set	3950
   113  0000                     _ADERRH	set	3951
   114  0000                     _ADPREVL	set	3937
   115  0000                     _ADPREVH	set	3938
   116  0000                     _ADFLTRL	set	3954
   117  0000                     _ADFLTRH	set	3955
   118  0000                     _ADACCL	set	3952
   119  0000                     _ADACCH	set	3953
   120  0000                     _ADCNT	set	3943
   121  0000                     _ADRESL	set	3939
   122  0000                     _ADRESH	set	3940
   123  0000                     _ADACQ	set	3932
   124  0000                     _ADCON0	set	3936
   125  0000                     _ADCLK	set	3927
   126  0000                     _ADSTAT	set	3941
   127  0000                     _ADCON3	set	3931
   128  0000                     _ADCON2	set	3930
   129  0000                     _ADPRE	set	3934
   130  0000                     _ADSTPTH	set	3945
   131  0000                     _ADUTHH	set	3949
   132  0000                     _ADUTHL	set	3948
   133  0000                     _ADLTHH	set	3947
   134  0000                     _SP1BRGH	set	3996
   135  0000                     _TX1STA	set	3998
   136  0000                     _OSCTUNE	set	3805
   137  0000                     _OSCFRQ	set	3806
   138  0000                     _T2CON	set	4029
   139  0000                     _INLVLD	set	3874
   140  0000                     _SLRCOND	set	3875
   141  0000                     _ODCOND	set	3876
   142  0000                     _WPUD	set	3877
   143  0000                     _TRISD	set	3979
   144  0000                     _TRISC	set	3978
   145  0000                     _TRISB	set	3977
   146  0000                     _TRISA	set	3976
   147  0000                     _TRISE	set	3980
   148  0000                     _LATC	set	3973
   149  0000                     _LATB	set	3972
   150  000F05  00                 	db	0	; dummy byte at the end
   151  0000                     
   152                           	psect	nvCOMRAM
   153  00004A                     __pnvCOMRAM:
   154                           	callstack 0
   155  00004A                     _ADCC_ADI_InterruptHandler:
   156                           	callstack 0
   157  00004A                     	ds	2
   158  00004C                     _EUSART1_ErrorHandler:
   159                           	callstack 0
   160  00004C                     	ds	2
   161  00004E                     _EUSART1_OverrunErrorHandler:
   162                           	callstack 0
   163  00004E                     	ds	2
   164  000050                     _EUSART1_FramingErrorHandler:
   165                           	callstack 0
   166  000050                     	ds	2
   167  000052                     _EUSART1_RxDefaultInterruptHandler:
   168                           	callstack 0
   169  000052                     	ds	2
   170  000054                     _EUSART1_TxDefaultInterruptHandler:
   171                           	callstack 0
   172  000054                     	ds	2
   173  000056                     _eusart1TxBufferRemaining:
   174                           	callstack 0
   175  000056                     	ds	1
   176  0000                     _ADCON1bits	set	3929
   177  0000                     _ADCON2bits	set	3930
   178  0000                     _ADCON3bits	set	3931
   179  0000                     _SSP1CON1bits	set	3990
   180  0000                     _TRISCbits	set	3978
   181  0000                     _ADSTATbits	set	3941
   182  0000                     _ADCON0bits	set	3936
   183  0000                     _RC1STAbits	set	3997
   184  0000                     _TX1STAbits	set	3998
   185  0000                     _PR2	set	4028
   186  0000                     _TMR2	set	4027
   187  0000                     _T2CONbits	set	4029
   188  0000                     _T2RSTbits	set	4032
   189  0000                     _T2HLTbits	set	4030
   190  0000                     _RX1PPS	set	3765
   191  0000                     _SSP1CLKPPS	set	3767
   192  0000                     _INLVLA	set	3853
   193  0000                     _SLRCONA	set	3854
   194  0000                     _ODCONA	set	3855
   195  0000                     _WPUA	set	3856
   196  0000                     _ANSELA	set	3857
   197  0000                     _ANSELB	set	3865
   198  0000                     _ANSELC	set	3873
   199  0000                     _ANSELD	set	3878
   200  0000                     _LATA	set	3971
   201  0000                     _LATD	set	3974
   202  0000                     _LATE	set	3975
   203  0000                     _SSP1BUF	set	3986
   204  0000                     _SSP1ADD	set	3987
   205  0000                     _SSP1STAT	set	3989
   206  0000                     _RC1REG	set	3993
   207  0000                     _TX1REG	set	3994
   208  0000                     _SP1BRGL	set	3995
   209  0000                     _RC1STA	set	3997
   210  0000                     _BAUD1CON	set	3999
   211  0000                     _T2TMR	set	4027
   212  0000                     _T2PR	set	4028
   213  0000                     _T2HLT	set	4030
   214  0000                     _T2CLKCON	set	4031
   215  0000                     _RB4	set	31860
   216  0000                     _INLVLE	set	3882
   217  0000                     _SLRCONE	set	3883
   218  0000                     _ODCONE	set	3884
   219  0000                     _WPUE	set	3885
   220  0000                     _ANSELE	set	3886
   221  0000                     _INLVLC	set	3869
   222  0000                     _SLRCONC	set	3870
   223  0000                     _ODCONC	set	3871
   224  0000                     _WPUC	set	3872
   225  0000                     _ADACT	set	3926
   226  0000                     _ADREF	set	3928
   227  0000                     _ADCON1	set	3929
   228  0000                     _ADCAP	set	3933
   229  0000                     _ADPCH	set	3935
   230  0000                     _ADRPT	set	3942
   231  0000                     _ADSTPTL	set	3944
   232  0000                     _ADLTHL	set	3946
   233  0000                     _INLVLB	set	3861
   234  0000                     _SLRCONB	set	3862
   235  0000                     _ODCONB	set	3863
   236  0000                     _WPUB	set	3864
   237  0000                     _PIE1bits	set	3779
   238  0000                     _PIE3bits	set	3781
   239  0000                     _PIR4bits	set	3790
   240  0000                     _SSP1DATPPS	set	3768
   241  0000                     _RC3PPS	set	3834
   242  0000                     _RC5PPS	set	3836
   243  0000                     _RC7PPS	set	3838
   244  0000                     _INTCONbits	set	4082
   245  0000                     _T2RST	set	4032
   246  0000                     _OSCCON1	set	3800
   247  0000                     _OSCCON3	set	3802
   248  0000                     _OSCEN	set	3804
   249  0000                     _PMD0	set	3809
   250  0000                     _PMD5	set	3814
   251  0000                     _PMD4	set	3813
   252  0000                     _PMD3	set	3812
   253  0000                     _PMD2	set	3811
   254  0000                     _PMD1	set	3810
   255  0000                     _PIR1bits	set	3787
   256  0000                     _PIR3bits	set	3789
   257  0000                     _SSP1CON2	set	3991
   258  0000                     _SSP1CON1	set	3990
   259  0000                     _RE0	set	31880
   260                           
   261                           ; #config settings
   262                           
   263                           	psect	cinit
   264  001690                     __pcinit:
   265                           	callstack 0
   266  001690                     start_initialization:
   267                           	callstack 0
   268  001690                     __initialization:
   269                           	callstack 0
   270                           
   271                           ; Initialize objects allocated to COMRAM (2 bytes)
   272                           ; load TBLPTR registers with __pidataCOMRAM
   273  001690  0E64               	movlw	low __pidataCOMRAM
   274  001692  6EF6               	movwf	tblptrl,c
   275  001694  0E18               	movlw	high __pidataCOMRAM
   276  001696  6EF7               	movwf	tblptrh,c
   277  001698  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   278  00169A  6EF8               	movwf	tblptru,c
   279  00169C  0009               	tblrd		*+	;fetch initializer
   280  00169E  CFF5 F057          	movff	tablat,__pdataCOMRAM
   281  0016A2  0009               	tblrd		*+	;fetch initializer
   282  0016A4  CFF5 F058          	movff	tablat,__pdataCOMRAM+1
   283                           
   284                           ; Clear objects allocated to COMRAM (45 bytes)
   285  0016A8  EE00  F001         	lfsr	0,__pbssCOMRAM
   286  0016AC  0E2D               	movlw	45
   287  0016AE                     clear_0:
   288  0016AE  6AEE               	clrf	postinc0,c
   289  0016B0  06E8               	decf	wreg,f,c
   290  0016B2  E1FD               	bnz	clear_0
   291  0016B4                     end_of_initialization:
   292                           	callstack 0
   293  0016B4                     __end_of__initialization:
   294                           	callstack 0
   295  0016B4  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   296  0016B6  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   297  0016B8  0100               	movlb	0
   298  0016BA  EF7C  F008         	goto	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMRAM
   301  000001                     __pbssCOMRAM:
   302                           	callstack 0
   303  000001                     _eusart1RxStatusBuffer:
   304                           	callstack 0
   305  000001                     	ds	8
   306  000009                     _eusart1RxBuffer:
   307                           	callstack 0
   308  000009                     	ds	8
   309  000011                     _eusart1TxBuffer:
   310                           	callstack 0
   311  000011                     	ds	8
   312  000019                     _datos:
   313                           	callstack 0
   314  000019                     	ds	2
   315  00001B                     _adc12bits:
   316                           	callstack 0
   317  00001B                     	ds	2
   318  00001D                     _convertedValue:
   319                           	callstack 0
   320  00001D                     	ds	2
   321  00001F                     _CC:
   322                           	callstack 0
   323  00001F                     	ds	2
   324  000021                     _pp:
   325                           	callstack 0
   326  000021                     	ds	2
   327  000023                     _ok:
   328                           	callstack 0
   329  000023                     	ds	1
   330  000024                     _tengo_dato_serial:
   331                           	callstack 0
   332  000024                     	ds	1
   333  000025                     _INTEPT:
   334                           	callstack 0
   335  000025                     	ds	1
   336  000026                     _eusart1RxLastError:
   337                           	callstack 0
   338  000026                     	ds	1
   339  000027                     _eusart1RxCount:
   340                           	callstack 0
   341  000027                     	ds	1
   342  000028                     _eusart1RxTail:
   343                           	callstack 0
   344  000028                     	ds	1
   345  000029                     _eusart1RxHead:
   346                           	callstack 0
   347  000029                     	ds	1
   348  00002A                     _eusart1TxTail:
   349                           	callstack 0
   350  00002A                     	ds	1
   351  00002B                     _eusart1TxHead:
   352                           	callstack 0
   353  00002B                     	ds	1
   354  00002C                     _bloque:
   355                           	callstack 0
   356  00002C                     	ds	2
   357                           
   358                           	psect	dataCOMRAM
   359  000057                     __pdataCOMRAM:
   360                           	callstack 0
   361  000057                     _select:
   362                           	callstack 0
   363  000057                     	ds	2
   364                           
   365                           	psect	cstackCOMRAM
   366  00002E                     __pcstackCOMRAM:
   367                           	callstack 0
   368  00002E                     ??_fin_adc:
   369  00002E                     
   370                           ; 1 bytes @ 0x0
   371  00002E                     	ds	2
   372  000030                     ??_INTERRUPT_InterruptManager:
   373                           
   374                           ; 1 bytes @ 0x2
   375  000030                     	ds	4
   376  000034                     ??_SPI1_Open:
   377  000034                     EUSART1_Read@readValue:
   378                           	callstack 0
   379  000034                     EUSART1_Write@txData:
   380                           	callstack 0
   381  000034                     SPI1_ExchangeByte@data:
   382                           	callstack 0
   383  000034                     EUSART1_SetFramingErrorHandler@interruptHandler:
   384                           	callstack 0
   385  000034                     EUSART1_SetOverrunErrorHandler@interruptHandler:
   386                           	callstack 0
   387  000034                     EUSART1_SetErrorHandler@interruptHandler:
   388                           	callstack 0
   389  000034                     EUSART1_SetTxInterruptHandler@interruptHandler:
   390                           	callstack 0
   391  000034                     EUSART1_SetRxInterruptHandler@interruptHandler:
   392                           	callstack 0
   393  000034                     ADCC_SetADIInterruptHandler@InterruptHandler:
   394                           	callstack 0
   395  000034                     inicializarRecepcion@rec:
   396                           	callstack 0
   397  000034                     tengocambiodefdM@rec:
   398                           	callstack 0
   399  000034                     retorneNumero@rec:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x6
   403  000034                     	ds	1
   404  000035                     SPI1_Open@spi1UniqueConfiguration:
   405                           	callstack 0
   406  000035                     SPI1_WriteBlock@block:
   407                           	callstack 0
   408  000035                     PalabraRecepcion@rec:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x7
   412  000035                     	ds	1
   413  000036                     
   414                           ; 1 bytes @ 0x8
   415  000036                     	ds	1
   416  000037                     ??_PalabraRecepcion:
   417  000037                     SPI1_WriteBlock@blockSize:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x9
   421  000037                     	ds	2
   422  000039                     PalabraRecepcion@datorx:
   423                           	callstack 0
   424  000039                     SPI1_WriteBlock@data:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0xB
   428  000039                     	ds	2
   429  00003B                     SPI_W@convertedValue:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0xD
   433  00003B                     	ds	2
   434  00003D                     ??_SPI_W:
   435                           
   436                           ; 1 bytes @ 0xF
   437  00003D                     	ds	2
   438  00003F                     SPI_W@adc12bits:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x11
   442  00003F                     	ds	2
   443  000041                     SPI_W@data:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x13
   447  000041                     	ds	2
   448  000043                     ??_main:
   449                           
   450                           ; 1 bytes @ 0x15
   451  000043                     	ds	1
   452  000044                     main@rece:
   453                           	callstack 0
   454                           
   455                           ; 6 bytes @ 0x16
   456  000044                     	ds	6
   457                           
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 63 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  rece            6   22[COMRAM] struct recepcion
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   478 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   479 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   480 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   481 ;;Total ram usage:        7 bytes
   482 ;; Hardware stack levels required when called: 7
   483 ;; This function calls:
   484 ;;		_ADCC_SetADIInterruptHandler
   485 ;;		_EUSART1_Read
   486 ;;		_EUSART1_Write
   487 ;;		_EUSART1_is_rx_ready
   488 ;;		_PalabraRecepcion
   489 ;;		_SPI1_Open
   490 ;;		_SPI_W
   491 ;;		_SYSTEM_Initialize
   492 ;;		_TMR2_Start
   493 ;;		_inicializarRecepcion
   494 ;;		_retorneNumero
   495 ;;		_tengocambiodefdM
   496 ;; This function is called by:
   497 ;;		Startup code after reset
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text0
   502  0010F8                     __ptext0:
   503                           	callstack 0
   504  0010F8                     _main:
   505                           	callstack 24
   506  0010F8                     
   507                           ;main.c: 66:     SYSTEM_Initialize();
   508  0010F8  ECAF  F00B         	call	_SYSTEM_Initialize	;wreg free
   509  0010FC                     
   510                           ;main.c: 68:     SPI1_Open(SPI1_DEFAULT);
   511  0010FC  0E00               	movlw	0
   512  0010FE  EC4A  F009         	call	_SPI1_Open
   513  001102                     
   514                           ;main.c: 69:     RB4=1;
   515  001102  888E               	bsf	3982,4,c	;volatile
   516  001104                     
   517                           ;main.c: 70:     RE0=1;
   518  001104  8091               	bsf	3985,0,c	;volatile
   519  001106                     
   520                           ;main.c: 78:     (INTCONbits.GIE = 1);
   521  001106  8EF2               	bsf	242,7,c	;volatile
   522  001108                     
   523                           ;main.c: 84:     (INTCONbits.PEIE = 1);
   524  001108  8CF2               	bsf	242,6,c	;volatile
   525  00110A                     
   526                           ;main.c: 88:     ADPCH=channel_ANA0;
   527  00110A  0E00               	movlw	0
   528  00110C  010F               	movlb	15	; () banked
   529  00110E  6F5F               	movwf	95,b	;volatile
   530  001110                     
   531                           ; BSR set to: 15
   532                           ;main.c: 90:     TMR2_Start();
   533  001110  EC2E  F00C         	call	_TMR2_Start	;wreg free
   534  001114                     
   535                           ;main.c: 91:     ADCC_SetADIInterruptHandler(fin_adc);
   536  001114  0E3A               	movlw	low _fin_adc
   537  001116  6E34               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
   538  001118  0E17               	movlw	high _fin_adc
   539  00111A  6E35               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
   540  00111C  EC23  F00C         	call	_ADCC_SetADIInterruptHandler	;wreg free
   541  001120                     
   542                           ;main.c: 92:     recepcion rece;;main.c: 94:     inicializarRecepcion(&rece);
   543  001120  0E44               	movlw	low main@rece
   544  001122  6E34               	movwf	inicializarRecepcion@rec^0,c
   545  001124  0E00               	movlw	high main@rece
   546  001126  6E35               	movwf	(inicializarRecepcion@rec+1)^0,c
   547  001128  EC5F  F00B         	call	_inicializarRecepcion	;wreg free
   548  00112C                     l2252:
   549                           
   550                           ;main.c: 97:     {;main.c: 99:         if(EUSART1_is_rx_ready()){
   551  00112C  ECF7  F00B         	call	_EUSART1_is_rx_ready	;wreg free
   552  001130  0900               	iorlw	0
   553  001132  B4D8               	btfsc	status,2,c
   554  001134  EF9E  F008         	goto	u761
   555  001138  EFA0  F008         	goto	u760
   556  00113C                     u761:
   557  00113C  EFA8  F008         	goto	l2256
   558  001140                     u760:
   559  001140                     
   560                           ;main.c: 100:             PalabraRecepcion(EUSART1_Read(),&rece);
   561  001140  0E44               	movlw	low main@rece
   562  001142  6E35               	movwf	PalabraRecepcion@rec^0,c
   563  001144  0E00               	movlw	high main@rece
   564  001146  6E36               	movwf	(PalabraRecepcion@rec+1)^0,c
   565  001148  EC87  F00A         	call	_EUSART1_Read	;wreg free
   566  00114C  EC83  F007         	call	_PalabraRecepcion
   567  001150                     l2256:
   568                           
   569                           ;main.c: 103:         if (tengocambiodefdM(&rece)){
   570  001150  0E44               	movlw	low main@rece
   571  001152  6E34               	movwf	tengocambiodefdM@rec^0,c
   572  001154  0E00               	movlw	high main@rece
   573  001156  6E35               	movwf	(tengocambiodefdM@rec+1)^0,c
   574  001158  EC15  F00B         	call	_tengocambiodefdM	;wreg free
   575  00115C  0900               	iorlw	0
   576  00115E  B4D8               	btfsc	status,2,c
   577  001160  EFB4  F008         	goto	u771
   578  001164  EFB6  F008         	goto	u770
   579  001168                     u771:
   580  001168  EFC0  F008         	goto	l2260
   581  00116C                     u770:
   582  00116C                     
   583                           ;main.c: 105:             select=retorneNumero(&rece);
   584  00116C  0E44               	movlw	low main@rece
   585  00116E  6E34               	movwf	retorneNumero@rec^0,c
   586  001170  0E00               	movlw	high main@rece
   587  001172  6E35               	movwf	(retorneNumero@rec+1)^0,c
   588  001174  EC02  F00C         	call	_retorneNumero	;wreg free
   589  001178  6E57               	movwf	_select^0,c
   590  00117A  6A58               	clrf	(_select+1)^0,c
   591  00117C  BE57               	btfsc	_select^0,7,c
   592  00117E  0658               	decf	(_select+1)^0,f,c
   593  001180                     l2260:
   594                           
   595                           ;main.c: 107:         if(INTEPT){
   596  001180  5025               	movf	_INTEPT^0,w,c
   597  001182  B4D8               	btfsc	status,2,c
   598  001184  EFC6  F008         	goto	u781
   599  001188  EFC8  F008         	goto	u780
   600  00118C                     u781:
   601  00118C  EFCC  F008         	goto	l2266
   602  001190                     u780:
   603  001190                     
   604                           ;main.c: 108:             INTEPT=0;
   605  001190  0E00               	movlw	0
   606  001192  6E25               	movwf	_INTEPT^0,c
   607  001194                     
   608                           ;main.c: 109:             CC++;
   609  001194  4A1F               	infsnz	_CC^0,f,c
   610  001196  2A20               	incf	(_CC+1)^0,f,c
   611  001198                     l2266:
   612                           
   613                           ;main.c: 111:         if(CC>=select){
   614  001198  5057               	movf	_select^0,w,c
   615  00119A  5C1F               	subwf	_CC^0,w,c
   616  00119C  5020               	movf	(_CC+1)^0,w,c
   617  00119E  0A80               	xorlw	128
   618  0011A0  6E43               	movwf	??_main^0,c
   619  0011A2  5058               	movf	(_select+1)^0,w,c
   620  0011A4  0A80               	xorlw	128
   621  0011A6  5843               	subwfb	??_main^0,w,c
   622  0011A8  A0D8               	btfss	status,0,c
   623  0011AA  EFD9  F008         	goto	u791
   624  0011AE  EFDB  F008         	goto	u790
   625  0011B2                     u791:
   626  0011B2  EF96  F008         	goto	l2252
   627  0011B6                     u790:
   628  0011B6                     
   629                           ;main.c: 112:             CC=0;
   630  0011B6  0E00               	movlw	0
   631  0011B8  6E20               	movwf	(_CC+1)^0,c
   632  0011BA  0E00               	movlw	0
   633  0011BC  6E1F               	movwf	_CC^0,c
   634  0011BE                     
   635                           ;main.c: 114:             SPI_W(convertedValue);
   636  0011BE  C01D  F03B         	movff	_convertedValue,SPI_W@convertedValue
   637  0011C2  C01E  F03C         	movff	_convertedValue+1,SPI_W@convertedValue+1
   638  0011C6  ECB0  F00A         	call	_SPI_W	;wreg free
   639  0011CA                     
   640                           ;main.c: 116:             EUSART1_Write(convertedValue>>8);
   641  0011CA  501E               	movf	(_convertedValue+1)^0,w,c
   642  0011CC  EC5B  F00A         	call	_EUSART1_Write
   643  0011D0                     
   644                           ;main.c: 117:             EUSART1_Write(convertedValue &0x00FF);
   645  0011D0  501D               	movf	_convertedValue^0,w,c
   646  0011D2  EC5B  F00A         	call	_EUSART1_Write
   647  0011D6  EF96  F008         	goto	l2252
   648  0011DA  EF69  F000         	goto	start
   649  0011DE                     __end_of_main:
   650                           	callstack 0
   651                           
   652 ;; *************** function _tengocambiodefdM *****************
   653 ;; Defined at:
   654 ;;		line 67 in file "ESTADO.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  rec             2    6[COMRAM] PTR struct recepcion
   657 ;;		 -> main@rece(6), 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      unsigned char 
   662 ;; Registers used:
   663 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   672 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   673 ;;Total ram usage:        2 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; Hardware stack levels required when called: 4
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text1
   684  00162A                     __ptext1:
   685                           	callstack 0
   686  00162A                     _tengocambiodefdM:
   687                           	callstack 26
   688  00162A                     
   689                           ;ESTADO.c: 68:     if (rec->bandera){
   690  00162A  EE20 F004          	lfsr	2,4
   691  00162E  5034               	movf	tengocambiodefdM@rec^0,w,c
   692  001630  26D9               	addwf	fsr2l,f,c
   693  001632  5035               	movf	(tengocambiodefdM@rec+1)^0,w,c
   694  001634  22DA               	addwfc	fsr2h,f,c
   695  001636  50DF               	movf	indf2,w,c
   696  001638  B4D8               	btfsc	status,2,c
   697  00163A  EF21  F00B         	goto	u661
   698  00163E  EF23  F00B         	goto	u660
   699  001642                     u661:
   700  001642  EF2E  F00B         	goto	l2190
   701  001646                     u660:
   702  001646                     
   703                           ;ESTADO.c: 69:         rec->bandera=0;
   704  001646  EE20 F004          	lfsr	2,4
   705  00164A  5034               	movf	tengocambiodefdM@rec^0,w,c
   706  00164C  26D9               	addwf	fsr2l,f,c
   707  00164E  5035               	movf	(tengocambiodefdM@rec+1)^0,w,c
   708  001650  22DA               	addwfc	fsr2h,f,c
   709  001652  0E00               	movlw	0
   710  001654  6EDF               	movwf	indf2,c
   711  001656                     
   712                           ;ESTADO.c: 70:         return 1;
   713  001656  0E01               	movlw	1
   714  001658  EF2F  F00B         	goto	l656
   715  00165C                     l2190:
   716                           
   717                           ;ESTADO.c: 72:     return 0;
   718  00165C  0E00               	movlw	0
   719  00165E                     l656:
   720  00165E  0012               	return		;funcret
   721  001660                     __end_of_tengocambiodefdM:
   722                           	callstack 0
   723                           
   724 ;; *************** function _retorneNumero *****************
   725 ;; Defined at:
   726 ;;		line 74 in file "ESTADO.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  rec             2    6[COMRAM] PTR struct recepcion
   729 ;;		 -> main@rece(6), 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      char 
   734 ;; Registers used:
   735 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 4
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text2
   756  001804                     __ptext2:
   757                           	callstack 0
   758  001804                     _retorneNumero:
   759                           	callstack 26
   760  001804                     
   761                           ;ESTADO.c: 75:     return rec->numconvertido;
   762  001804  EE20 F003          	lfsr	2,3
   763  001808  5034               	movf	retorneNumero@rec^0,w,c
   764  00180A  26D9               	addwf	fsr2l,f,c
   765  00180C  5035               	movf	(retorneNumero@rec+1)^0,w,c
   766  00180E  22DA               	addwfc	fsr2h,f,c
   767  001810  50DF               	movf	indf2,w,c
   768  001812  0012               	return		;funcret
   769  001814                     __end_of_retorneNumero:
   770                           	callstack 0
   771                           
   772 ;; *************** function _inicializarRecepcion *****************
   773 ;; Defined at:
   774 ;;		line 11 in file "ESTADO.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  rec             2    6[COMRAM] PTR struct recepcion
   777 ;;		 -> main@rece(6), 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;		None
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   789 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   793 ;;Total ram usage:        2 bytes
   794 ;; Hardware stack levels used: 1
   795 ;; Hardware stack levels required when called: 4
   796 ;; This function calls:
   797 ;;		Nothing
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text3
   804  0016BE                     __ptext3:
   805                           	callstack 0
   806  0016BE                     _inicializarRecepcion:
   807                           	callstack 26
   808  0016BE                     
   809                           ;ESTADO.c: 12:     rec->estados=1;
   810  0016BE  C034  FFD9         	movff	inicializarRecepcion@rec,fsr2l
   811  0016C2  C035  FFDA         	movff	inicializarRecepcion@rec+1,fsr2h
   812  0016C6  0E01               	movlw	1
   813  0016C8  6EDF               	movwf	indf2,c
   814  0016CA                     
   815                           ;ESTADO.c: 13:     rec->bandera=0;
   816  0016CA  EE20 F004          	lfsr	2,4
   817  0016CE  5034               	movf	inicializarRecepcion@rec^0,w,c
   818  0016D0  26D9               	addwf	fsr2l,f,c
   819  0016D2  5035               	movf	(inicializarRecepcion@rec+1)^0,w,c
   820  0016D4  22DA               	addwfc	fsr2h,f,c
   821  0016D6  0E00               	movlw	0
   822  0016D8  6EDF               	movwf	indf2,c
   823  0016DA                     
   824                           ;ESTADO.c: 14:     rec->error=0;
   825  0016DA  EE20 F005          	lfsr	2,5
   826  0016DE  5034               	movf	inicializarRecepcion@rec^0,w,c
   827  0016E0  26D9               	addwf	fsr2l,f,c
   828  0016E2  5035               	movf	(inicializarRecepcion@rec+1)^0,w,c
   829  0016E4  22DA               	addwfc	fsr2h,f,c
   830  0016E6  0E00               	movlw	0
   831  0016E8  6EDF               	movwf	indf2,c
   832  0016EA  0012               	return		;funcret
   833  0016EC                     __end_of_inicializarRecepcion:
   834                           	callstack 0
   835                           
   836 ;; *************** function _TMR2_Start *****************
   837 ;; Defined at:
   838 ;;		line 100 in file "mcc_generated_files/tmr2.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;		None
   841 ;; Auto vars:     Size  Location     Type
   842 ;;		None
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		None
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   856 ;;Total ram usage:        0 bytes
   857 ;; Hardware stack levels used: 1
   858 ;; Hardware stack levels required when called: 4
   859 ;; This function calls:
   860 ;;		Nothing
   861 ;; This function is called by:
   862 ;;		_main
   863 ;;		_TMR2_StartTimer
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           	psect	text4
   868  00185C                     __ptext4:
   869                           	callstack 0
   870  00185C                     _TMR2_Start:
   871                           	callstack 26
   872  00185C                     
   873                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
   874  00185C  8EBD               	bsf	189,7,c	;volatile
   875  00185E  0012               	return		;funcret
   876  001860                     __end_of_TMR2_Start:
   877                           	callstack 0
   878                           
   879 ;; *************** function _SYSTEM_Initialize *****************
   880 ;; Defined at:
   881 ;;		line 50 in file "mcc_generated_files/mcc.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   899 ;;Total ram usage:        0 bytes
   900 ;; Hardware stack levels used: 1
   901 ;; Hardware stack levels required when called: 6
   902 ;; This function calls:
   903 ;;		_ADCC_Initialize
   904 ;;		_EUSART1_Initialize
   905 ;;		_INTERRUPT_Initialize
   906 ;;		_OSCILLATOR_Initialize
   907 ;;		_PIN_MANAGER_Initialize
   908 ;;		_PMD_Initialize
   909 ;;		_SPI1_Initialize
   910 ;;		_TMR2_Initialize
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text5
   917  00175E                     __ptext5:
   918                           	callstack 0
   919  00175E                     _SYSTEM_Initialize:
   920                           	callstack 24
   921  00175E                     
   922                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
   923  00175E  EC30  F00C         	call	_INTERRUPT_Initialize	;wreg free
   924  001762                     
   925                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
   926  001762  ECCF  F00B         	call	_PMD_Initialize	;wreg free
   927  001766                     
   928                           ;mcc_generated_files/mcc.c: 54:     SPI1_Initialize();
   929  001766  EC8B  F00B         	call	_SPI1_Initialize	;wreg free
   930  00176A                     
   931                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
   932  00176A  ECA2  F009         	call	_PIN_MANAGER_Initialize	;wreg free
   933  00176E                     
   934                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
   935  00176E  ECEB  F00B         	call	_OSCILLATOR_Initialize	;wreg free
   936  001772                     
   937                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
   938  001772  EC2A  F00A         	call	_ADCC_Initialize	;wreg free
   939  001776                     
   940                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
   941  001776  ECC0  F00B         	call	_TMR2_Initialize	;wreg free
   942  00177A                     
   943                           ;mcc_generated_files/mcc.c: 59:     EUSART1_Initialize();
   944  00177A  ECED  F009         	call	_EUSART1_Initialize	;wreg free
   945  00177E  0012               	return		;funcret
   946  001780                     __end_of_SYSTEM_Initialize:
   947                           	callstack 0
   948                           
   949 ;; *************** function _TMR2_Initialize *****************
   950 ;; Defined at:
   951 ;;		line 62 in file "mcc_generated_files/tmr2.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used: 1
   971 ;; Hardware stack levels required when called: 4
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_SYSTEM_Initialize
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text6
   980  001780                     __ptext6:
   981                           	callstack 0
   982  001780                     _TMR2_Initialize:
   983                           	callstack 25
   984  001780                     
   985                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
   986  001780  0E01               	movlw	1
   987  001782  6EBF               	movwf	191,c	;volatile
   988                           
   989                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
   990  001784  0E00               	movlw	0
   991  001786  6EBE               	movwf	190,c	;volatile
   992                           
   993                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
   994  001788  0E00               	movlw	0
   995  00178A  6EC0               	movwf	192,c	;volatile
   996                           
   997                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x25;
   998  00178C  0E25               	movlw	37
   999  00178E  6EBC               	movwf	188,c	;volatile
  1000                           
  1001                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  1002  001790  0E00               	movlw	0
  1003  001792  6EBB               	movwf	187,c	;volatile
  1004  001794                     
  1005                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
  1006  001794  010E               	movlb	14	; () banked
  1007  001796  93CE               	bcf	206,1,b	;volatile
  1008                           
  1009                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
  1010  001798  0EC0               	movlw	192
  1011  00179A  6EBD               	movwf	189,c	;volatile
  1012  00179C                     
  1013                           ; BSR set to: 14
  1014  00179C  0012               	return		;funcret
  1015  00179E                     __end_of_TMR2_Initialize:
  1016                           	callstack 0
  1017                           
  1018 ;; *************** function _SPI1_Initialize *****************
  1019 ;; Defined at:
  1020 ;;		line 62 in file "mcc_generated_files/spi1.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1038 ;;Total ram usage:        0 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 4
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_SYSTEM_Initialize
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text7
  1049  001716                     __ptext7:
  1050                           	callstack 0
  1051  001716                     _SPI1_Initialize:
  1052                           	callstack 25
  1053  001716                     
  1054                           ;mcc_generated_files/spi1.c: 65:     SSP1CLKPPS = 19;
  1055  001716  0E13               	movlw	19
  1056  001718  010E               	movlb	14	; () banked
  1057  00171A  6FB7               	movwf	183,b	;volatile
  1058                           
  1059                           ;mcc_generated_files/spi1.c: 66:     SSP1DATPPS = 20;
  1060  00171C  0E14               	movlw	20
  1061  00171E  6FB8               	movwf	184,b	;volatile
  1062                           
  1063                           ;mcc_generated_files/spi1.c: 67:     RC3PPS = 15;
  1064  001720  0E0F               	movlw	15
  1065  001722  6FFA               	movwf	250,b	;volatile
  1066                           
  1067                           ;mcc_generated_files/spi1.c: 68:     RC5PPS = 16;
  1068  001724  0E10               	movlw	16
  1069  001726  6FFC               	movwf	252,b	;volatile
  1070                           
  1071                           ;mcc_generated_files/spi1.c: 70:     SSP1STAT = 0x40;
  1072  001728  0E40               	movlw	64
  1073  00172A  6E95               	movwf	149,c	;volatile
  1074                           
  1075                           ;mcc_generated_files/spi1.c: 71:     SSP1CON1 = 0x00;
  1076  00172C  0E00               	movlw	0
  1077  00172E  6E96               	movwf	150,c	;volatile
  1078                           
  1079                           ;mcc_generated_files/spi1.c: 72:     SSP1ADD = 0x01;
  1080  001730  0E01               	movlw	1
  1081  001732  6E93               	movwf	147,c	;volatile
  1082  001734                     
  1083                           ; BSR set to: 14
  1084                           ;mcc_generated_files/spi1.c: 73:     TRISCbits.TRISC3 = 0;
  1085  001734  968A               	bcf	138,3,c	;volatile
  1086  001736                     
  1087                           ; BSR set to: 14
  1088                           ;mcc_generated_files/spi1.c: 74:     SSP1CON1bits.SSPEN = 0;
  1089  001736  9A96               	bcf	150,5,c	;volatile
  1090  001738                     
  1091                           ; BSR set to: 14
  1092  001738  0012               	return		;funcret
  1093  00173A                     __end_of_SPI1_Initialize:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _PMD_Initialize *****************
  1097 ;; Defined at:
  1098 ;;		line 76 in file "mcc_generated_files/mcc.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1116 ;;Total ram usage:        0 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 4
  1119 ;; This function calls:
  1120 ;;		Nothing
  1121 ;; This function is called by:
  1122 ;;		_SYSTEM_Initialize
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           
  1126                           	psect	text8
  1127  00179E                     __ptext8:
  1128                           	callstack 0
  1129  00179E                     _PMD_Initialize:
  1130                           	callstack 25
  1131  00179E                     
  1132                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
  1133  00179E  0E00               	movlw	0
  1134  0017A0  010E               	movlb	14	; () banked
  1135  0017A2  6FE1               	movwf	225,b	;volatile
  1136                           
  1137                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
  1138  0017A4  0E00               	movlw	0
  1139  0017A6  6FE2               	movwf	226,b	;volatile
  1140                           
  1141                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
  1142  0017A8  0E00               	movlw	0
  1143  0017AA  6FE3               	movwf	227,b	;volatile
  1144                           
  1145                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
  1146  0017AC  0E00               	movlw	0
  1147  0017AE  6FE4               	movwf	228,b	;volatile
  1148                           
  1149                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
  1150  0017B0  0E00               	movlw	0
  1151  0017B2  6FE5               	movwf	229,b	;volatile
  1152                           
  1153                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
  1154  0017B4  0E00               	movlw	0
  1155  0017B6  6FE6               	movwf	230,b	;volatile
  1156  0017B8                     
  1157                           ; BSR set to: 14
  1158  0017B8  0012               	return		;funcret
  1159  0017BA                     __end_of_PMD_Initialize:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function _PIN_MANAGER_Initialize *****************
  1163 ;; Defined at:
  1164 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 4
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_SYSTEM_Initialize
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text9
  1193  001344                     __ptext9:
  1194                           	callstack 0
  1195  001344                     _PIN_MANAGER_Initialize:
  1196                           	callstack 25
  1197  001344                     
  1198                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  1199  001344  0E00               	movlw	0
  1200  001346  6E87               	movwf	135,c	;volatile
  1201                           
  1202                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  1203  001348  0E00               	movlw	0
  1204  00134A  6E86               	movwf	134,c	;volatile
  1205                           
  1206                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  1207  00134C  0E00               	movlw	0
  1208  00134E  6E83               	movwf	131,c	;volatile
  1209                           
  1210                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  1211  001350  0E00               	movlw	0
  1212  001352  6E84               	movwf	132,c	;volatile
  1213                           
  1214                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  1215  001354  0E00               	movlw	0
  1216  001356  6E85               	movwf	133,c	;volatile
  1217                           
  1218                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x06;
  1219  001358  0E06               	movlw	6
  1220  00135A  6E8C               	movwf	140,c	;volatile
  1221  00135C                     
  1222                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  1223  00135C  6888               	setf	136,c	;volatile
  1224                           
  1225                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xEF;
  1226  00135E  0EEF               	movlw	239
  1227  001360  6E89               	movwf	137,c	;volatile
  1228                           
  1229                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0x57;
  1230  001362  0E57               	movlw	87
  1231  001364  6E8A               	movwf	138,c	;volatile
  1232                           
  1233                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFE;
  1234  001366  0EFE               	movlw	254
  1235  001368  6E8B               	movwf	139,c	;volatile
  1236                           
  1237                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFE;
  1238  00136A  0EFE               	movlw	254
  1239  00136C  010F               	movlb	15	; () banked
  1240  00136E  6F26               	movwf	38,b	;volatile
  1241                           
  1242                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0x07;
  1243  001370  0E07               	movlw	7
  1244  001372  6F21               	movwf	33,b	;volatile
  1245                           
  1246                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
  1247  001374  0EEF               	movlw	239
  1248  001376  6F19               	movwf	25,b	;volatile
  1249                           
  1250                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x06;
  1251  001378  0E06               	movlw	6
  1252  00137A  6F2E               	movwf	46,b	;volatile
  1253  00137C                     
  1254                           ; BSR set to: 15
  1255                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
  1256  00137C  6911               	setf	17,b	;volatile
  1257                           
  1258                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
  1259  00137E  0E00               	movlw	0
  1260  001380  6F25               	movwf	37,b	;volatile
  1261                           
  1262                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
  1263  001382  0E00               	movlw	0
  1264  001384  6F2D               	movwf	45,b	;volatile
  1265                           
  1266                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
  1267  001386  0E00               	movlw	0
  1268  001388  6F18               	movwf	24,b	;volatile
  1269                           
  1270                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
  1271  00138A  0E00               	movlw	0
  1272  00138C  6F10               	movwf	16,b	;volatile
  1273                           
  1274                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
  1275  00138E  0E00               	movlw	0
  1276  001390  6F20               	movwf	32,b	;volatile
  1277                           
  1278                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
  1279  001392  0E00               	movlw	0
  1280  001394  6F2C               	movwf	44,b	;volatile
  1281                           
  1282                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
  1283  001396  0E00               	movlw	0
  1284  001398  6F0F               	movwf	15,b	;volatile
  1285                           
  1286                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
  1287  00139A  0E00               	movlw	0
  1288  00139C  6F17               	movwf	23,b	;volatile
  1289                           
  1290                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
  1291  00139E  0E00               	movlw	0
  1292  0013A0  6F1F               	movwf	31,b	;volatile
  1293                           
  1294                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
  1295  0013A2  0E00               	movlw	0
  1296  0013A4  6F24               	movwf	36,b	;volatile
  1297  0013A6                     
  1298                           ; BSR set to: 15
  1299                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
  1300  0013A6  690E               	setf	14,b	;volatile
  1301  0013A8                     
  1302                           ; BSR set to: 15
  1303                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
  1304  0013A8  6916               	setf	22,b	;volatile
  1305  0013AA                     
  1306                           ; BSR set to: 15
  1307                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
  1308  0013AA  691E               	setf	30,b	;volatile
  1309  0013AC                     
  1310                           ; BSR set to: 15
  1311                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
  1312  0013AC  6923               	setf	35,b	;volatile
  1313                           
  1314                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
  1315  0013AE  0E07               	movlw	7
  1316  0013B0  6F2B               	movwf	43,b	;volatile
  1317  0013B2                     
  1318                           ; BSR set to: 15
  1319                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
  1320  0013B2  690D               	setf	13,b	;volatile
  1321  0013B4                     
  1322                           ; BSR set to: 15
  1323                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
  1324  0013B4  6915               	setf	21,b	;volatile
  1325  0013B6                     
  1326                           ; BSR set to: 15
  1327                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
  1328  0013B6  691D               	setf	29,b	;volatile
  1329  0013B8                     
  1330                           ; BSR set to: 15
  1331                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
  1332  0013B8  6922               	setf	34,b	;volatile
  1333                           
  1334                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x0F;
  1335  0013BA  0E0F               	movlw	15
  1336  0013BC  6F2A               	movwf	42,b	;volatile
  1337                           
  1338                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
  1339  0013BE  0E13               	movlw	19
  1340  0013C0  010E               	movlb	14	; () banked
  1341  0013C2  6FB7               	movwf	183,b	;volatile
  1342                           
  1343                           ;mcc_generated_files/pin_manager.c: 128:     RX1PPS = 0x16;
  1344  0013C4  0E16               	movlw	22
  1345  0013C6  6FB5               	movwf	181,b	;volatile
  1346                           
  1347                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x0F;
  1348  0013C8  0E0F               	movlw	15
  1349  0013CA  6FFA               	movwf	250,b	;volatile
  1350                           
  1351                           ;mcc_generated_files/pin_manager.c: 130:     RC5PPS = 0x10;
  1352  0013CC  0E10               	movlw	16
  1353  0013CE  6FFC               	movwf	252,b	;volatile
  1354                           
  1355                           ;mcc_generated_files/pin_manager.c: 131:     RC7PPS = 0x09;
  1356  0013D0  0E09               	movlw	9
  1357  0013D2  6FFE               	movwf	254,b	;volatile
  1358                           
  1359                           ;mcc_generated_files/pin_manager.c: 132:     SSP1DATPPS = 0x14;
  1360  0013D4  0E14               	movlw	20
  1361  0013D6  6FB8               	movwf	184,b	;volatile
  1362  0013D8                     
  1363                           ; BSR set to: 14
  1364  0013D8  0012               	return		;funcret
  1365  0013DA                     __end_of_PIN_MANAGER_Initialize:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _OSCILLATOR_Initialize *****************
  1369 ;; Defined at:
  1370 ;;		line 62 in file "mcc_generated_files/mcc.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 4
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_SYSTEM_Initialize
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text10
  1399  0017D6                     __ptext10:
  1400                           	callstack 0
  1401  0017D6                     _OSCILLATOR_Initialize:
  1402                           	callstack 25
  1403  0017D6                     
  1404                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x60;
  1405  0017D6  0E60               	movlw	96
  1406  0017D8  010E               	movlb	14	; () banked
  1407  0017DA  6FD8               	movwf	216,b	;volatile
  1408                           
  1409                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
  1410  0017DC  0E00               	movlw	0
  1411  0017DE  6FDA               	movwf	218,b	;volatile
  1412                           
  1413                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
  1414  0017E0  0E00               	movlw	0
  1415  0017E2  6FDC               	movwf	220,b	;volatile
  1416                           
  1417                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x05;
  1418  0017E4  0E05               	movlw	5
  1419  0017E6  6FDE               	movwf	222,b	;volatile
  1420                           
  1421                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
  1422  0017E8  0E00               	movlw	0
  1423  0017EA  6FDD               	movwf	221,b	;volatile
  1424  0017EC                     
  1425                           ; BSR set to: 14
  1426  0017EC  0012               	return		;funcret
  1427  0017EE                     __end_of_OSCILLATOR_Initialize:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _INTERRUPT_Initialize *****************
  1431 ;; Defined at:
  1432 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		None
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 4
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_SYSTEM_Initialize
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text11
  1461  001860                     __ptext11:
  1462                           	callstack 0
  1463  001860                     _INTERRUPT_Initialize:
  1464                           	callstack 25
  1465  001860                     
  1466                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCONbits.IPEN = 0;
  1467  001860  9AF2               	bcf	242,5,c	;volatile
  1468  001862  0012               	return		;funcret
  1469  001864                     __end_of_INTERRUPT_Initialize:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _EUSART1_Initialize *****************
  1473 ;; Defined at:
  1474 ;;		line 88 in file "mcc_generated_files/eusart1.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 5
  1495 ;; This function calls:
  1496 ;;		_EUSART1_SetErrorHandler
  1497 ;;		_EUSART1_SetFramingErrorHandler
  1498 ;;		_EUSART1_SetOverrunErrorHandler
  1499 ;;		_EUSART1_SetRxInterruptHandler
  1500 ;;		_EUSART1_SetTxInterruptHandler
  1501 ;; This function is called by:
  1502 ;;		_SYSTEM_Initialize
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           	psect	text12
  1507  0013DA                     __ptext12:
  1508                           	callstack 0
  1509  0013DA                     _EUSART1_Initialize:
  1510                           	callstack 24
  1511  0013DA                     
  1512                           ;mcc_generated_files/eusart1.c: 91:     PIE3bits.RC1IE = 0;
  1513  0013DA  010E               	movlb	14	; () banked
  1514  0013DC  9BC5               	bcf	197,5,b	;volatile
  1515  0013DE                     
  1516                           ; BSR set to: 14
  1517                           ;mcc_generated_files/eusart1.c: 92:     EUSART1_SetRxInterruptHandler(EUSART1_Receive_IS
      +                          R);
  1518  0013DE  0EDE               	movlw	low _EUSART1_Receive_ISR
  1519  0013E0  6E34               	movwf	EUSART1_SetRxInterruptHandler@interruptHandler^0,c
  1520  0013E2  0E11               	movlw	high _EUSART1_Receive_ISR
  1521  0013E4  6E35               	movwf	(EUSART1_SetRxInterruptHandler@interruptHandler+1)^0,c
  1522  0013E6  EC0F  F00C         	call	_EUSART1_SetRxInterruptHandler	;wreg free
  1523  0013EA                     
  1524                           ;mcc_generated_files/eusart1.c: 93:     PIE3bits.TX1IE = 0;
  1525  0013EA  010E               	movlb	14	; () banked
  1526  0013EC  99C5               	bcf	197,4,b	;volatile
  1527                           
  1528                           ;mcc_generated_files/eusart1.c: 94:     EUSART1_SetTxInterruptHandler(EUSART1_Transmit_I
      +                          SR);
  1529  0013EE  0EAE               	movlw	low _EUSART1_Transmit_ISR
  1530  0013F0  6E34               	movwf	EUSART1_SetTxInterruptHandler@interruptHandler^0,c
  1531  0013F2  0E15               	movlw	high _EUSART1_Transmit_ISR
  1532  0013F4  6E35               	movwf	(EUSART1_SetTxInterruptHandler@interruptHandler+1)^0,c
  1533  0013F6  EC0A  F00C         	call	_EUSART1_SetTxInterruptHandler	;wreg free
  1534  0013FA                     
  1535                           ;mcc_generated_files/eusart1.c: 98:     BAUD1CON = 0x08;
  1536  0013FA  0E08               	movlw	8
  1537  0013FC  6E9F               	movwf	159,c	;volatile
  1538  0013FE                     
  1539                           ;mcc_generated_files/eusart1.c: 101:     RC1STA = 0x90;
  1540  0013FE  0E90               	movlw	144
  1541  001400  6E9D               	movwf	157,c	;volatile
  1542  001402                     
  1543                           ;mcc_generated_files/eusart1.c: 104:     TX1STA = 0x24;
  1544  001402  0E24               	movlw	36
  1545  001404  6E9E               	movwf	158,c	;volatile
  1546  001406                     
  1547                           ;mcc_generated_files/eusart1.c: 107:     SP1BRGL = 0x22;
  1548  001406  0E22               	movlw	34
  1549  001408  6E9B               	movwf	155,c	;volatile
  1550  00140A                     
  1551                           ;mcc_generated_files/eusart1.c: 110:     SP1BRGH = 0x00;
  1552  00140A  0E00               	movlw	0
  1553  00140C  6E9C               	movwf	156,c	;volatile
  1554  00140E                     
  1555                           ;mcc_generated_files/eusart1.c: 113:     EUSART1_SetFramingErrorHandler(EUSART1_DefaultF
      +                          ramingErrorHandler);
  1556  00140E  0E66               	movlw	low _EUSART1_DefaultFramingErrorHandler
  1557  001410  6E34               	movwf	EUSART1_SetFramingErrorHandler@interruptHandler^0,c
  1558  001412  0E18               	movlw	high _EUSART1_DefaultFramingErrorHandler
  1559  001414  6E35               	movwf	(EUSART1_SetFramingErrorHandler@interruptHandler+1)^0,c
  1560  001416  EC19  F00C         	call	_EUSART1_SetFramingErrorHandler	;wreg free
  1561  00141A                     
  1562                           ;mcc_generated_files/eusart1.c: 114:     EUSART1_SetOverrunErrorHandler(EUSART1_DefaultO
      +                          verrunErrorHandler);
  1563  00141A  0E50               	movlw	low _EUSART1_DefaultOverrunErrorHandler
  1564  00141C  6E34               	movwf	EUSART1_SetOverrunErrorHandler@interruptHandler^0,c
  1565  00141E  0E18               	movlw	high _EUSART1_DefaultOverrunErrorHandler
  1566  001420  6E35               	movwf	(EUSART1_SetOverrunErrorHandler@interruptHandler+1)^0,c
  1567  001422  EC14  F00C         	call	_EUSART1_SetOverrunErrorHandler	;wreg free
  1568  001426                     
  1569                           ;mcc_generated_files/eusart1.c: 115:     EUSART1_SetErrorHandler(EUSART1_DefaultErrorHan
      +                          dler);
  1570  001426  0E56               	movlw	low _EUSART1_DefaultErrorHandler
  1571  001428  6E34               	movwf	EUSART1_SetErrorHandler@interruptHandler^0,c
  1572  00142A  0E18               	movlw	high _EUSART1_DefaultErrorHandler
  1573  00142C  6E35               	movwf	(EUSART1_SetErrorHandler@interruptHandler+1)^0,c
  1574  00142E  EC1E  F00C         	call	_EUSART1_SetErrorHandler	;wreg free
  1575                           
  1576                           ;mcc_generated_files/eusart1.c: 117:     eusart1RxLastError.status = 0;
  1577  001432  0E00               	movlw	0
  1578  001434  6E26               	movwf	_eusart1RxLastError^0,c	;volatile
  1579                           
  1580                           ;mcc_generated_files/eusart1.c: 120:     eusart1TxHead = 0;
  1581  001436  0E00               	movlw	0
  1582  001438  6E2B               	movwf	_eusart1TxHead^0,c	;volatile
  1583                           
  1584                           ;mcc_generated_files/eusart1.c: 121:     eusart1TxTail = 0;
  1585  00143A  0E00               	movlw	0
  1586  00143C  6E2A               	movwf	_eusart1TxTail^0,c	;volatile
  1587                           
  1588                           ;mcc_generated_files/eusart1.c: 122:     eusart1TxBufferRemaining = sizeof(eusart1TxBuff
      +                          er);
  1589  00143E  0E08               	movlw	8
  1590  001440  6E56               	movwf	_eusart1TxBufferRemaining^0,c	;volatile
  1591                           
  1592                           ;mcc_generated_files/eusart1.c: 124:     eusart1RxHead = 0;
  1593  001442  0E00               	movlw	0
  1594  001444  6E29               	movwf	_eusart1RxHead^0,c	;volatile
  1595                           
  1596                           ;mcc_generated_files/eusart1.c: 125:     eusart1RxTail = 0;
  1597  001446  0E00               	movlw	0
  1598  001448  6E28               	movwf	_eusart1RxTail^0,c	;volatile
  1599                           
  1600                           ;mcc_generated_files/eusart1.c: 126:     eusart1RxCount = 0;
  1601  00144A  0E00               	movlw	0
  1602  00144C  6E27               	movwf	_eusart1RxCount^0,c	;volatile
  1603  00144E                     
  1604                           ;mcc_generated_files/eusart1.c: 129:     PIE3bits.RC1IE = 1;
  1605  00144E  010E               	movlb	14	; () banked
  1606  001450  8BC5               	bsf	197,5,b	;volatile
  1607  001452                     
  1608                           ; BSR set to: 14
  1609  001452  0012               	return		;funcret
  1610  001454                     __end_of_EUSART1_Initialize:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _EUSART1_SetTxInterruptHandler *****************
  1614 ;; Defined at:
  1615 ;;		line 285 in file "mcc_generated_files/eusart1.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  1618 ;;		 -> EUSART1_Transmit_ISR(1), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;		None
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  1    wreg      void 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1634 ;;Total ram usage:        2 bytes
  1635 ;; Hardware stack levels used: 1
  1636 ;; Hardware stack levels required when called: 4
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_EUSART1_Initialize
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text13
  1645  001814                     __ptext13:
  1646                           	callstack 0
  1647  001814                     _EUSART1_SetTxInterruptHandler:
  1648                           	callstack 24
  1649  001814                     
  1650                           ;mcc_generated_files/eusart1.c: 286:     EUSART1_TxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1651  001814  C034  F054         	movff	EUSART1_SetTxInterruptHandler@interruptHandler,_EUSART1_TxDefaultInterruptHandler
  1652  001818  C035  F055         	movff	EUSART1_SetTxInterruptHandler@interruptHandler+1,_EUSART1_TxDefaultInterruptHandl
      +                          er+1
  1653  00181C  0012               	return		;funcret
  1654  00181E                     __end_of_EUSART1_SetTxInterruptHandler:
  1655                           	callstack 0
  1656                           
  1657 ;; *************** function _EUSART1_SetRxInterruptHandler *****************
  1658 ;; Defined at:
  1659 ;;		line 289 in file "mcc_generated_files/eusart1.c"
  1660 ;; Parameters:    Size  Location     Type
  1661 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  1662 ;;		 -> EUSART1_Receive_ISR(1), 
  1663 ;; Auto vars:     Size  Location     Type
  1664 ;;		None
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  1    wreg      void 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1677 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1678 ;;Total ram usage:        2 bytes
  1679 ;; Hardware stack levels used: 1
  1680 ;; Hardware stack levels required when called: 4
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_EUSART1_Initialize
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text14
  1689  00181E                     __ptext14:
  1690                           	callstack 0
  1691  00181E                     _EUSART1_SetRxInterruptHandler:
  1692                           	callstack 24
  1693  00181E                     
  1694                           ;mcc_generated_files/eusart1.c: 290:     EUSART1_RxDefaultInterruptHandler = interruptHa
      +                          ndler;
  1695  00181E  C034  F052         	movff	EUSART1_SetRxInterruptHandler@interruptHandler,_EUSART1_RxDefaultInterruptHandler
  1696  001822  C035  F053         	movff	EUSART1_SetRxInterruptHandler@interruptHandler+1,_EUSART1_RxDefaultInterruptHandl
      +                          er+1
  1697  001826  0012               	return		;funcret
  1698  001828                     __end_of_EUSART1_SetRxInterruptHandler:
  1699                           	callstack 0
  1700                           
  1701 ;; *************** function _EUSART1_SetOverrunErrorHandler *****************
  1702 ;; Defined at:
  1703 ;;		line 277 in file "mcc_generated_files/eusart1.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  1706 ;;		 -> EUSART1_DefaultOverrunErrorHandler(1), 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1718 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1721 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;Total ram usage:        2 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 4
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_EUSART1_Initialize
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text15
  1733  001828                     __ptext15:
  1734                           	callstack 0
  1735  001828                     _EUSART1_SetOverrunErrorHandler:
  1736                           	callstack 24
  1737  001828                     
  1738                           ;mcc_generated_files/eusart1.c: 278:     EUSART1_OverrunErrorHandler = interruptHandler;
  1739  001828  C034  F04E         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler,_EUSART1_OverrunErrorHandler
  1740  00182C  C035  F04F         	movff	EUSART1_SetOverrunErrorHandler@interruptHandler+1,_EUSART1_OverrunErrorHandler+1
  1741  001830  0012               	return		;funcret
  1742  001832                     __end_of_EUSART1_SetOverrunErrorHandler:
  1743                           	callstack 0
  1744                           
  1745 ;; *************** function _EUSART1_SetFramingErrorHandler *****************
  1746 ;; Defined at:
  1747 ;;		line 273 in file "mcc_generated_files/eusart1.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  1750 ;;		 -> EUSART1_DefaultFramingErrorHandler(1), 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;		None
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1766 ;;Total ram usage:        2 bytes
  1767 ;; Hardware stack levels used: 1
  1768 ;; Hardware stack levels required when called: 4
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_EUSART1_Initialize
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text16
  1777  001832                     __ptext16:
  1778                           	callstack 0
  1779  001832                     _EUSART1_SetFramingErrorHandler:
  1780                           	callstack 24
  1781  001832                     
  1782                           ;mcc_generated_files/eusart1.c: 274:     EUSART1_FramingErrorHandler = interruptHandler;
  1783  001832  C034  F050         	movff	EUSART1_SetFramingErrorHandler@interruptHandler,_EUSART1_FramingErrorHandler
  1784  001836  C035  F051         	movff	EUSART1_SetFramingErrorHandler@interruptHandler+1,_EUSART1_FramingErrorHandler+1
  1785  00183A  0012               	return		;funcret
  1786  00183C                     __end_of_EUSART1_SetFramingErrorHandler:
  1787                           	callstack 0
  1788                           
  1789 ;; *************** function _EUSART1_SetErrorHandler *****************
  1790 ;; Defined at:
  1791 ;;		line 281 in file "mcc_generated_files/eusart1.c"
  1792 ;; Parameters:    Size  Location     Type
  1793 ;;  interruptHan    2    6[COMRAM] PTR FTN()void 
  1794 ;;		 -> EUSART1_DefaultErrorHandler(1), 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;		None
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1806 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1810 ;;Total ram usage:        2 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; Hardware stack levels required when called: 4
  1813 ;; This function calls:
  1814 ;;		Nothing
  1815 ;; This function is called by:
  1816 ;;		_EUSART1_Initialize
  1817 ;; This function uses a non-reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text17
  1821  00183C                     __ptext17:
  1822                           	callstack 0
  1823  00183C                     _EUSART1_SetErrorHandler:
  1824                           	callstack 24
  1825  00183C                     
  1826                           ;mcc_generated_files/eusart1.c: 282:     EUSART1_ErrorHandler = interruptHandler;
  1827  00183C  C034  F04C         	movff	EUSART1_SetErrorHandler@interruptHandler,_EUSART1_ErrorHandler
  1828  001840  C035  F04D         	movff	EUSART1_SetErrorHandler@interruptHandler+1,_EUSART1_ErrorHandler+1
  1829  001844  0012               	return		;funcret
  1830  001846                     __end_of_EUSART1_SetErrorHandler:
  1831                           	callstack 0
  1832                           
  1833 ;; *************** function _ADCC_Initialize *****************
  1834 ;; Defined at:
  1835 ;;		line 63 in file "mcc_generated_files/adcc.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;                  1    wreg      void 
  1842 ;; Registers used:
  1843 ;;		wreg, status,2, status,0, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1853 ;;Total ram usage:        0 bytes
  1854 ;; Hardware stack levels used: 1
  1855 ;; Hardware stack levels required when called: 5
  1856 ;; This function calls:
  1857 ;;		_ADCC_SetADIInterruptHandler
  1858 ;; This function is called by:
  1859 ;;		_SYSTEM_Initialize
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863                           	psect	text18
  1864  001454                     __ptext18:
  1865                           	callstack 0
  1866  001454                     _ADCC_Initialize:
  1867                           	callstack 24
  1868  001454                     
  1869                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  1870  001454  0E00               	movlw	0
  1871  001456  6E6A               	movwf	106,c	;volatile
  1872                           
  1873                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  1874  001458  0E00               	movlw	0
  1875  00145A  6E6B               	movwf	107,c	;volatile
  1876                           
  1877                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  1878  00145C  0E00               	movlw	0
  1879  00145E  6E6C               	movwf	108,c	;volatile
  1880                           
  1881                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  1882  001460  0E00               	movlw	0
  1883  001462  6E6D               	movwf	109,c	;volatile
  1884                           
  1885                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  1886  001464  0E00               	movlw	0
  1887  001466  6E68               	movwf	104,c	;volatile
  1888                           
  1889                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  1890  001468  0E00               	movlw	0
  1891  00146A  6E69               	movwf	105,c	;volatile
  1892                           
  1893                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  1894  00146C  0E00               	movlw	0
  1895  00146E  6E66               	movwf	102,c	;volatile
  1896                           
  1897                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  1898  001470  0E00               	movlw	0
  1899  001472  010F               	movlb	15	; () banked
  1900  001474  6F5F               	movwf	95,b	;volatile
  1901                           
  1902                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  1903  001476  0E00               	movlw	0
  1904  001478  6F5D               	movwf	93,b	;volatile
  1905                           
  1906                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
  1907  00147A  0E00               	movlw	0
  1908  00147C  6F5E               	movwf	94,b	;volatile
  1909                           
  1910                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
  1911  00147E  0E00               	movlw	0
  1912  001480  6F59               	movwf	89,b	;volatile
  1913                           
  1914                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
  1915  001482  0E00               	movlw	0
  1916  001484  6F5A               	movwf	90,b	;volatile
  1917                           
  1918                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
  1919  001486  0E00               	movlw	0
  1920  001488  6F5B               	movwf	91,b	;volatile
  1921                           
  1922                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
  1923  00148A  0E00               	movlw	0
  1924  00148C  6E65               	movwf	101,c	;volatile
  1925                           
  1926                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
  1927  00148E  0E00               	movlw	0
  1928  001490  6F58               	movwf	88,b	;volatile
  1929                           
  1930                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x04;
  1931  001492  0E04               	movlw	4
  1932  001494  6F56               	movwf	86,b	;volatile
  1933                           
  1934                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x07;
  1935  001496  0E07               	movlw	7
  1936  001498  6F57               	movwf	87,b	;volatile
  1937                           
  1938                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
  1939  00149A  0E84               	movlw	132
  1940  00149C  6E60               	movwf	96,c	;volatile
  1941                           
  1942                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x01;
  1943  00149E  0E01               	movlw	1
  1944  0014A0  6F5C               	movwf	92,b	;volatile
  1945  0014A2                     
  1946                           ; BSR set to: 15
  1947                           ;mcc_generated_files/adcc.c: 106:     PIR1bits.ADIF = 0;
  1948  0014A2  010E               	movlb	14	; () banked
  1949  0014A4  91CB               	bcf	203,0,b	;volatile
  1950  0014A6                     
  1951                           ; BSR set to: 14
  1952                           ;mcc_generated_files/adcc.c: 108:     PIE1bits.ADIE = 1;
  1953  0014A6  81C3               	bsf	195,0,b	;volatile
  1954  0014A8                     
  1955                           ; BSR set to: 14
  1956                           ;mcc_generated_files/adcc.c: 110:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
  1957  0014A8  0E68               	movlw	low _ADCC_DefaultInterruptHandler
  1958  0014AA  6E34               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler^0,c
  1959  0014AC  0E18               	movlw	high _ADCC_DefaultInterruptHandler
  1960  0014AE  6E35               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)^0,c
  1961  0014B0  EC23  F00C         	call	_ADCC_SetADIInterruptHandler	;wreg free
  1962  0014B4  0012               	return		;funcret
  1963  0014B6                     __end_of_ADCC_Initialize:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _ADCC_SetADIInterruptHandler *****************
  1967 ;; Defined at:
  1968 ;;		line 307 in file "mcc_generated_files/adcc.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  1971 ;;		 -> fin_adc(1), ADCC_DefaultInterruptHandler(1), 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;		None
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1983 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;Total ram usage:        2 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 4
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_ADCC_Initialize
  1994 ;;		_main
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text19
  1999  001846                     __ptext19:
  2000                           	callstack 0
  2001  001846                     _ADCC_SetADIInterruptHandler:
  2002                           	callstack 24
  2003  001846                     
  2004                           ;mcc_generated_files/adcc.c: 308:     ADCC_ADI_InterruptHandler = InterruptHandler;
  2005  001846  C034  F04A         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
  2006  00184A  C035  F04B         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
  2007  00184E  0012               	return		;funcret
  2008  001850                     __end_of_ADCC_SetADIInterruptHandler:
  2009                           	callstack 0
  2010                           
  2011 ;; *************** function _SPI_W *****************
  2012 ;; Defined at:
  2013 ;;		line 128 in file "main.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  convertedVal    2   13[COMRAM] unsigned int 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  data            2   19[COMRAM] int 
  2018 ;;  adc12bits       2   17[COMRAM] int 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2031 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2032 ;;Total ram usage:        8 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 6
  2035 ;; This function calls:
  2036 ;;		_SPI1_WriteBlock
  2037 ;; This function is called by:
  2038 ;;		_main
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text20
  2043  001560                     __ptext20:
  2044                           	callstack 0
  2045  001560                     _SPI_W:
  2046                           	callstack 24
  2047  001560                     
  2048                           ;main.c: 133:     int adc12bits=convertedValue<<2;
  2049  001560  C03B  F03D         	movff	SPI_W@convertedValue,??_SPI_W
  2050  001564  C03C  F03E         	movff	SPI_W@convertedValue+1,??_SPI_W+1
  2051  001568  90D8               	bcf	status,0,c
  2052  00156A  363D               	rlcf	??_SPI_W^0,f,c
  2053  00156C  363E               	rlcf	(??_SPI_W+1)^0,f,c
  2054  00156E  90D8               	bcf	status,0,c
  2055  001570  363D               	rlcf	??_SPI_W^0,f,c
  2056  001572  363E               	rlcf	(??_SPI_W+1)^0,f,c
  2057  001574  C03D  F03F         	movff	??_SPI_W,SPI_W@adc12bits
  2058  001578  C03E  F040         	movff	??_SPI_W+1,SPI_W@adc12bits+1
  2059  00157C                     
  2060                           ;main.c: 134:     int data= 0b0001000000000000|adc12bits;
  2061  00157C  0E00               	movlw	0
  2062  00157E  103F               	iorwf	SPI_W@adc12bits^0,w,c
  2063  001580  6E41               	movwf	SPI_W@data^0,c
  2064  001582  0E10               	movlw	16
  2065  001584  1040               	iorwf	(SPI_W@adc12bits+1)^0,w,c
  2066  001586  6E42               	movwf	(SPI_W@data+1)^0,c
  2067  001588                     
  2068                           ;main.c: 136:     bloque[1]=(char)(0x00FF&data);
  2069  001588  C041  F02D         	movff	SPI_W@data,_bloque+1
  2070  00158C                     
  2071                           ;main.c: 137:     bloque[0]=(char)(0x00FF&(data>>8));
  2072  00158C  5042               	movf	(SPI_W@data+1)^0,w,c
  2073  00158E  6E2C               	movwf	_bloque^0,c
  2074  001590                     
  2075                           ;main.c: 138:     RE0=0;
  2076  001590  9091               	bcf	3985,0,c	;volatile
  2077  001592                     
  2078                           ;main.c: 139:     SPI1_WriteBlock(&bloque[0],2);
  2079  001592  0E2C               	movlw	low _bloque
  2080  001594  6E35               	movwf	SPI1_WriteBlock@block^0,c
  2081  001596  0E00               	movlw	high _bloque
  2082  001598  6E36               	movwf	(SPI1_WriteBlock@block+1)^0,c
  2083  00159A  0E00               	movlw	0
  2084  00159C  6E38               	movwf	(SPI1_WriteBlock@blockSize+1)^0,c
  2085  00159E  0E02               	movlw	2
  2086  0015A0  6E37               	movwf	SPI1_WriteBlock@blockSize^0,c
  2087  0015A2  ECF8  F00A         	call	_SPI1_WriteBlock	;wreg free
  2088  0015A6                     
  2089                           ;main.c: 140:     RE0=1;
  2090  0015A6  8091               	bsf	3985,0,c	;volatile
  2091  0015A8                     
  2092                           ;main.c: 141:     RB4=0;
  2093  0015A8  988E               	bcf	3982,4,c	;volatile
  2094  0015AA                     
  2095                           ;main.c: 142:     RB4=1;
  2096  0015AA  888E               	bsf	3982,4,c	;volatile
  2097  0015AC  0012               	return		;funcret
  2098  0015AE                     __end_of_SPI_W:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _SPI1_WriteBlock *****************
  2102 ;; Defined at:
  2103 ;;		line 118 in file "mcc_generated_files/spi1.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  block           2    7[COMRAM] PTR void 
  2106 ;;		 -> bloque(2), 
  2107 ;;  blockSize       2    9[COMRAM] unsigned int 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  data            2   11[COMRAM] PTR unsigned char 
  2110 ;;		 -> bloque(2), 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;Total ram usage:        6 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 5
  2127 ;; This function calls:
  2128 ;;		_SPI1_ExchangeByte
  2129 ;; This function is called by:
  2130 ;;		_SPI_W
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text21
  2135  0015F0                     __ptext21:
  2136                           	callstack 0
  2137  0015F0                     _SPI1_WriteBlock:
  2138                           	callstack 24
  2139  0015F0                     
  2140                           ;mcc_generated_files/spi1.c: 118: void SPI1_WriteBlock(void *block, size_t blockSize);mc
      +                          c_generated_files/spi1.c: 119: {;mcc_generated_files/spi1.c: 120:     uint8_t *data = bl
      +                          ock;
  2141  0015F0  C035  F039         	movff	SPI1_WriteBlock@block,SPI1_WriteBlock@data
  2142  0015F4  C036  F03A         	movff	SPI1_WriteBlock@block+1,SPI1_WriteBlock@data+1
  2143                           
  2144                           ;mcc_generated_files/spi1.c: 121:     while(blockSize--)
  2145  0015F8  EF07  F00B         	goto	l2054
  2146  0015FC                     l2050:
  2147                           
  2148                           ;mcc_generated_files/spi1.c: 122:     {;mcc_generated_files/spi1.c: 123:         SPI1_Ex
      +                          changeByte(*data++);
  2149  0015FC  C039  FFD9         	movff	SPI1_WriteBlock@data,fsr2l
  2150  001600  C03A  FFDA         	movff	SPI1_WriteBlock@data+1,fsr2h
  2151  001604  50DF               	movf	indf2,w,c
  2152  001606  ECDD  F00B         	call	_SPI1_ExchangeByte
  2153  00160A  4A39               	infsnz	SPI1_WriteBlock@data^0,f,c
  2154  00160C  2A3A               	incf	(SPI1_WriteBlock@data+1)^0,f,c
  2155  00160E                     l2054:
  2156                           
  2157                           ;mcc_generated_files/spi1.c: 121:     while(blockSize--)
  2158  00160E  0637               	decf	SPI1_WriteBlock@blockSize^0,f,c
  2159  001610  A0D8               	btfss	status,0,c
  2160  001612  0638               	decf	(SPI1_WriteBlock@blockSize+1)^0,f,c
  2161  001614  2837               	incf	SPI1_WriteBlock@blockSize^0,w,c
  2162  001616  E106               	bnz	u491
  2163  001618  2838               	incf	(SPI1_WriteBlock@blockSize+1)^0,w,c
  2164  00161A  A4D8               	btfss	status,2,c
  2165  00161C  EF12  F00B         	goto	u491
  2166  001620  EF14  F00B         	goto	u490
  2167  001624                     u491:
  2168  001624  EFFE  F00A         	goto	l2050
  2169  001628                     u490:
  2170  001628  0012               	return		;funcret
  2171  00162A                     __end_of_SPI1_WriteBlock:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function _SPI1_ExchangeByte *****************
  2175 ;; Defined at:
  2176 ;;		line 97 in file "mcc_generated_files/spi1.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  data            1    wreg     unsigned char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  data            1    6[COMRAM] unsigned char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      unsigned char 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2191 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2193 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2194 ;;Total ram usage:        1 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 4
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_SPI1_WriteBlock
  2201 ;;		_SPI1_ReadBlock
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text22
  2206  0017BA                     __ptext22:
  2207                           	callstack 0
  2208  0017BA                     _SPI1_ExchangeByte:
  2209                           	callstack 24
  2210                           
  2211                           ;incstack = 0
  2212                           ;SPI1_ExchangeByte@data stored from wreg
  2213  0017BA  6E34               	movwf	SPI1_ExchangeByte@data^0,c
  2214  0017BC                     
  2215                           ;mcc_generated_files/spi1.c: 97: uint8_t SPI1_ExchangeByte(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 98: {;mcc_generated_files/spi1.c: 99:     SSP1BUF = data;
  2216  0017BC  C034  FF92         	movff	SPI1_ExchangeByte@data,3986	;volatile
  2217  0017C0                     l597:
  2218  0017C0  010E               	movlb	14	; () banked
  2219  0017C2  A1CD               	btfss	205,0,b	;volatile
  2220  0017C4  EFE6  F00B         	goto	u21
  2221  0017C8  EFE8  F00B         	goto	u20
  2222  0017CC                     u21:
  2223  0017CC  EFE0  F00B         	goto	l597
  2224  0017D0                     u20:
  2225  0017D0                     
  2226                           ; BSR set to: 14
  2227                           ;mcc_generated_files/spi1.c: 101:     PIR3bits.SSP1IF = 0;
  2228  0017D0  91CD               	bcf	205,0,b	;volatile
  2229                           
  2230                           ;mcc_generated_files/spi1.c: 102:     return SSP1BUF;
  2231  0017D2  5092               	movf	146,w,c	;volatile
  2232  0017D4                     
  2233                           ; BSR set to: 14
  2234  0017D4  0012               	return		;funcret
  2235  0017D6                     __end_of_SPI1_ExchangeByte:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _SPI1_Open *****************
  2239 ;; Defined at:
  2240 ;;		line 77 in file "mcc_generated_files/spi1.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  spi1UniqueCo    1    wreg     enum E355
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  spi1UniqueCo    1    7[COMRAM] enum E355
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      _Bool 
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2255 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2256 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2258 ;;Total ram usage:        2 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 4
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text23
  2269  001294                     __ptext23:
  2270                           	callstack 0
  2271  001294                     _SPI1_Open:
  2272                           	callstack 26
  2273                           
  2274                           ; BSR set to: 14
  2275                           ;incstack = 0
  2276                           ;SPI1_Open@spi1UniqueConfiguration stored from wreg
  2277  001294  6E35               	movwf	SPI1_Open@spi1UniqueConfiguration^0,c
  2278  001296                     
  2279                           ;mcc_generated_files/spi1.c: 77: _Bool SPI1_Open(spi1_modes_t spi1UniqueConfiguration);m
      +                          cc_generated_files/spi1.c: 78: {;mcc_generated_files/spi1.c: 79:     if(!SSP1CON1bits.SS
      +                          PEN)
  2280  001296  BA96               	btfsc	150,5,c	;volatile
  2281  001298  EF50  F009         	goto	u211
  2282  00129C  EF52  F009         	goto	u210
  2283  0012A0                     u211:
  2284  0012A0  EFA1  F009         	goto	l591
  2285  0012A4                     u210:
  2286  0012A4                     
  2287                           ;mcc_generated_files/spi1.c: 80:     {;mcc_generated_files/spi1.c: 81:         SSP1STAT 
      +                          = spi1_configuration[spi1UniqueConfiguration].stat;
  2288  0012A4  5035               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  2289  0012A6  0D04               	mullw	4
  2290  0012A8  0E01               	movlw	1
  2291  0012AA  26F3               	addwf	243,f,c
  2292  0012AC  0E00               	movlw	0
  2293  0012AE  22F4               	addwfc	244,f,c
  2294  0012B0  0E01               	movlw	low _spi1_configuration
  2295  0012B2  24F3               	addwf	243,w,c
  2296  0012B4  6EF6               	movwf	tblptrl,c
  2297  0012B6  0E0F               	movlw	high _spi1_configuration
  2298  0012B8  20F4               	addwfc	244,w,c
  2299  0012BA  6EF7               	movwf	tblptrh,c
  2300  0012BC                     	if	1	;There are 3 active tblptr bytes
  2301  0012BC  6AF8               	clrf	tblptru,c
  2302  0012BE  0E00               	movlw	low (__mediumconst shr (0+16))
  2303  0012C0  22F8               	addwfc	tblptru,f,c
  2304  0012C2                     	endif
  2305  0012C2  0008               	tblrd		*
  2306  0012C4  CFF5 FF95          	movff	tablat,3989	;volatile
  2307                           
  2308                           ;mcc_generated_files/spi1.c: 82:         SSP1CON1 = spi1_configuration[spi1UniqueConfigu
      +                          ration].con1;
  2309  0012C8  5035               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  2310  0012CA  0D04               	mullw	4
  2311  0012CC  0E01               	movlw	low _spi1_configuration
  2312  0012CE  24F3               	addwf	243,w,c
  2313  0012D0  6EF6               	movwf	tblptrl,c
  2314  0012D2  0E0F               	movlw	high _spi1_configuration
  2315  0012D4  20F4               	addwfc	244,w,c
  2316  0012D6  6EF7               	movwf	tblptrh,c
  2317  0012D8                     	if	1	;There are 3 active tblptr bytes
  2318  0012D8  6AF8               	clrf	tblptru,c
  2319  0012DA  0E00               	movlw	low (__mediumconst shr (0+16))
  2320  0012DC  22F8               	addwfc	tblptru,f,c
  2321  0012DE                     	endif
  2322  0012DE  0008               	tblrd		*
  2323  0012E0  CFF5 FF96          	movff	tablat,3990	;volatile
  2324  0012E4                     
  2325                           ;mcc_generated_files/spi1.c: 83:         SSP1CON2 = 0x00;
  2326  0012E4  0E00               	movlw	0
  2327  0012E6  6E97               	movwf	151,c	;volatile
  2328  0012E8                     
  2329                           ;mcc_generated_files/spi1.c: 84:         SSP1ADD = spi1_configuration[spi1UniqueConfigur
      +                          ation].add;
  2330  0012E8  5035               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  2331  0012EA  0D04               	mullw	4
  2332  0012EC  0E02               	movlw	2
  2333  0012EE  26F3               	addwf	243,f,c
  2334  0012F0  0E00               	movlw	0
  2335  0012F2  22F4               	addwfc	244,f,c
  2336  0012F4  0E01               	movlw	low _spi1_configuration
  2337  0012F6  24F3               	addwf	243,w,c
  2338  0012F8  6EF6               	movwf	tblptrl,c
  2339  0012FA  0E0F               	movlw	high _spi1_configuration
  2340  0012FC  20F4               	addwfc	244,w,c
  2341  0012FE  6EF7               	movwf	tblptrh,c
  2342  001300                     	if	1	;There are 3 active tblptr bytes
  2343  001300  6AF8               	clrf	tblptru,c
  2344  001302  0E00               	movlw	low (__mediumconst shr (0+16))
  2345  001304  22F8               	addwfc	tblptru,f,c
  2346  001306                     	endif
  2347  001306  0008               	tblrd		*
  2348  001308  CFF5 FF93          	movff	tablat,3987	;volatile
  2349  00130C                     
  2350                           ;mcc_generated_files/spi1.c: 85:         TRISCbits.TRISC3 = spi1_configuration[spi1Uniqu
      +                          eConfiguration].operation;
  2351  00130C  5035               	movf	SPI1_Open@spi1UniqueConfiguration^0,w,c
  2352  00130E  0D04               	mullw	4
  2353  001310  0E03               	movlw	3
  2354  001312  26F3               	addwf	243,f,c
  2355  001314  0E00               	movlw	0
  2356  001316  22F4               	addwfc	244,f,c
  2357  001318  0E01               	movlw	low _spi1_configuration
  2358  00131A  24F3               	addwf	243,w,c
  2359  00131C  6EF6               	movwf	tblptrl,c
  2360  00131E  0E0F               	movlw	high _spi1_configuration
  2361  001320  20F4               	addwfc	244,w,c
  2362  001322  6EF7               	movwf	tblptrh,c
  2363  001324                     	if	1	;There are 3 active tblptr bytes
  2364  001324  6AF8               	clrf	tblptru,c
  2365  001326  0E00               	movlw	low (__mediumconst shr (0+16))
  2366  001328  22F8               	addwfc	tblptru,f,c
  2367  00132A                     	endif
  2368  00132A  0008               	tblrd		*
  2369  00132C  CFF5 F034          	movff	tablat,??_SPI1_Open
  2370  001330  4634               	rlncf	??_SPI1_Open^0,f,c
  2371  001332  4634               	rlncf	??_SPI1_Open^0,f,c
  2372  001334  4634               	rlncf	??_SPI1_Open^0,f,c
  2373  001336  508A               	movf	138,w,c	;volatile
  2374  001338  1834               	xorwf	??_SPI1_Open^0,w,c
  2375  00133A  0BF7               	andlw	-9
  2376  00133C  1834               	xorwf	??_SPI1_Open^0,w,c
  2377  00133E  6E8A               	movwf	138,c	;volatile
  2378  001340                     
  2379                           ;mcc_generated_files/spi1.c: 86:         SSP1CON1bits.SSPEN = 1;
  2380  001340  8A96               	bsf	150,5,c	;volatile
  2381  001342                     l591:
  2382  001342  0012               	return		;funcret
  2383  001344                     __end_of_SPI1_Open:
  2384                           	callstack 0
  2385                           
  2386 ;; *************** function _PalabraRecepcion *****************
  2387 ;; Defined at:
  2388 ;;		line 16 in file "ESTADO.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  datorx          1    wreg     unsigned char 
  2391 ;;  rec             2    7[COMRAM] PTR struct recepcion
  2392 ;;		 -> main@rece(6), 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  datorx          1   11[COMRAM] unsigned char 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;Total ram usage:        5 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 4
  2411 ;; This function calls:
  2412 ;;		Nothing
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           	psect	text24
  2419  000F06                     __ptext24:
  2420                           	callstack 0
  2421  000F06                     _PalabraRecepcion:
  2422                           	callstack 26
  2423                           
  2424                           ;incstack = 0
  2425                           ;PalabraRecepcion@datorx stored from wreg
  2426  000F06  6E39               	movwf	PalabraRecepcion@datorx^0,c
  2427  000F08                     
  2428                           ;ESTADO.c: 17:     switch(rec->estados){
  2429  000F08  EF5A  F008         	goto	l2176
  2430  000F0C                     l2128:
  2431                           
  2432                           ;ESTADO.c: 19:         if (datorx=='#')
  2433  000F0C  0E23               	movlw	35
  2434  000F0E  1839               	xorwf	PalabraRecepcion@datorx^0,w,c
  2435  000F10  A4D8               	btfss	status,2,c
  2436  000F12  EF8D  F007         	goto	u601
  2437  000F16  EF8F  F007         	goto	u600
  2438  000F1A                     u601:
  2439  000F1A  EF97  F007         	goto	l2132
  2440  000F1E                     u600:
  2441  000F1E                     
  2442                           ;ESTADO.c: 20:             rec->estados=2;
  2443  000F1E  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2444  000F22  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2445  000F26  0E02               	movlw	2
  2446  000F28  6EDF               	movwf	indf2,c
  2447  000F2A  EF7B  F008         	goto	l652
  2448  000F2E                     l2132:
  2449                           
  2450                           ;ESTADO.c: 22:             rec->estados=1;
  2451  000F2E  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2452  000F32  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2453  000F36  0E01               	movlw	1
  2454  000F38  6EDF               	movwf	indf2,c
  2455  000F3A                     
  2456                           ;ESTADO.c: 23:             rec->error=1;
  2457  000F3A  EE20 F005          	lfsr	2,5
  2458  000F3E  5035               	movf	PalabraRecepcion@rec^0,w,c
  2459  000F40  26D9               	addwf	fsr2l,f,c
  2460  000F42  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2461  000F44  22DA               	addwfc	fsr2h,f,c
  2462  000F46  0E01               	movlw	1
  2463  000F48  6EDF               	movwf	indf2,c
  2464  000F4A  EF7B  F008         	goto	l652
  2465  000F4E                     l2136:
  2466                           
  2467                           ;ESTADO.c: 27:         if ((datorx<48)||(datorx>57)){
  2468  000F4E  0E2F               	movlw	47
  2469  000F50  6439               	cpfsgt	PalabraRecepcion@datorx^0,c
  2470  000F52  EFAD  F007         	goto	u611
  2471  000F56  EFAF  F007         	goto	u610
  2472  000F5A                     u611:
  2473  000F5A  EFB7  F007         	goto	l2140
  2474  000F5E                     u610:
  2475  000F5E  0E39               	movlw	57
  2476  000F60  6439               	cpfsgt	PalabraRecepcion@datorx^0,c
  2477  000F62  EFB5  F007         	goto	u621
  2478  000F66  EFB7  F007         	goto	u620
  2479  000F6A                     u621:
  2480  000F6A  EFC7  F007         	goto	l2144
  2481  000F6E                     u620:
  2482  000F6E                     l2140:
  2483                           
  2484                           ;ESTADO.c: 28:             rec->error=1;
  2485  000F6E  EE20 F005          	lfsr	2,5
  2486  000F72  5035               	movf	PalabraRecepcion@rec^0,w,c
  2487  000F74  26D9               	addwf	fsr2l,f,c
  2488  000F76  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2489  000F78  22DA               	addwfc	fsr2h,f,c
  2490  000F7A  0E01               	movlw	1
  2491  000F7C  6EDF               	movwf	indf2,c
  2492  000F7E                     
  2493                           ;ESTADO.c: 29:             rec->estados=1;
  2494  000F7E  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2495  000F82  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2496  000F86  0E01               	movlw	1
  2497  000F88  6EDF               	movwf	indf2,c
  2498                           
  2499                           ;ESTADO.c: 31:         }
  2500  000F8A  EF7B  F008         	goto	l652
  2501  000F8E                     l2144:
  2502                           
  2503                           ;ESTADO.c: 33:             rec->estados=3;
  2504  000F8E  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2505  000F92  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2506  000F96  0E03               	movlw	3
  2507  000F98  6EDF               	movwf	indf2,c
  2508  000F9A                     
  2509                           ;ESTADO.c: 34:             rec->digito1=datorx;
  2510  000F9A  EE20 F001          	lfsr	2,1
  2511  000F9E  5035               	movf	PalabraRecepcion@rec^0,w,c
  2512  000FA0  26D9               	addwf	fsr2l,f,c
  2513  000FA2  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2514  000FA4  22DA               	addwfc	fsr2h,f,c
  2515  000FA6  C039  FFDF         	movff	PalabraRecepcion@datorx,indf2
  2516  000FAA  EF7B  F008         	goto	l652
  2517  000FAE                     l2148:
  2518                           
  2519                           ;ESTADO.c: 38:         if ((datorx<48)||(datorx>57))
  2520  000FAE  0E2F               	movlw	47
  2521  000FB0  6439               	cpfsgt	PalabraRecepcion@datorx^0,c
  2522  000FB2  EFDD  F007         	goto	u631
  2523  000FB6  EFDF  F007         	goto	u630
  2524  000FBA                     u631:
  2525  000FBA  EFE7  F007         	goto	l2152
  2526  000FBE                     u630:
  2527  000FBE  0E39               	movlw	57
  2528  000FC0  6439               	cpfsgt	PalabraRecepcion@datorx^0,c
  2529  000FC2  EFE5  F007         	goto	u641
  2530  000FC6  EFE7  F007         	goto	u640
  2531  000FCA                     u641:
  2532  000FCA  EFF7  F007         	goto	l2156
  2533  000FCE                     u640:
  2534  000FCE                     l2152:
  2535                           
  2536                           ;ESTADO.c: 39:         {;ESTADO.c: 40:             rec->error=1;
  2537  000FCE  EE20 F005          	lfsr	2,5
  2538  000FD2  5035               	movf	PalabraRecepcion@rec^0,w,c
  2539  000FD4  26D9               	addwf	fsr2l,f,c
  2540  000FD6  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2541  000FD8  22DA               	addwfc	fsr2h,f,c
  2542  000FDA  0E01               	movlw	1
  2543  000FDC  6EDF               	movwf	indf2,c
  2544  000FDE                     
  2545                           ;ESTADO.c: 41:             rec->estados=1;
  2546  000FDE  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2547  000FE2  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2548  000FE6  0E01               	movlw	1
  2549  000FE8  6EDF               	movwf	indf2,c
  2550                           
  2551                           ;ESTADO.c: 43:         }
  2552  000FEA  EF7B  F008         	goto	l652
  2553  000FEE                     l2156:
  2554                           
  2555                           ;ESTADO.c: 45:             rec->estados=4;
  2556  000FEE  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2557  000FF2  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2558  000FF6  0E04               	movlw	4
  2559  000FF8  6EDF               	movwf	indf2,c
  2560  000FFA                     
  2561                           ;ESTADO.c: 46:             rec->digito2=datorx;
  2562  000FFA  EE20 F002          	lfsr	2,2
  2563  000FFE  5035               	movf	PalabraRecepcion@rec^0,w,c
  2564  001000  26D9               	addwf	fsr2l,f,c
  2565  001002  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2566  001004  22DA               	addwfc	fsr2h,f,c
  2567  001006  C039  FFDF         	movff	PalabraRecepcion@datorx,indf2
  2568  00100A  EF7B  F008         	goto	l652
  2569  00100E                     l2160:
  2570                           
  2571                           ;ESTADO.c: 50:         if (datorx=='*'){
  2572  00100E  0E2A               	movlw	42
  2573  001010  1839               	xorwf	PalabraRecepcion@datorx^0,w,c
  2574  001012  A4D8               	btfss	status,2,c
  2575  001014  EF0E  F008         	goto	u651
  2576  001018  EF10  F008         	goto	u650
  2577  00101C                     u651:
  2578  00101C  EF42  F008         	goto	l2170
  2579  001020                     u650:
  2580  001020                     
  2581                           ;ESTADO.c: 51:             rec->numconvertido=(rec->digito1-48)*10+(rec->digito2-48);
  2582  001020  EE20 F003          	lfsr	2,3
  2583  001024  5035               	movf	PalabraRecepcion@rec^0,w,c
  2584  001026  26D9               	addwf	fsr2l,f,c
  2585  001028  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2586  00102A  22DA               	addwfc	fsr2h,f,c
  2587  00102C  EE10 F002          	lfsr	1,2
  2588  001030  5035               	movf	PalabraRecepcion@rec^0,w,c
  2589  001032  26E1               	addwf	fsr1l,f,c
  2590  001034  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2591  001036  22E2               	addwfc	fsr1h,f,c
  2592  001038  50E7               	movf	indf1,w,c
  2593  00103A  6E37               	movwf	??_PalabraRecepcion^0,c
  2594  00103C  EE10 F001          	lfsr	1,1
  2595  001040  5035               	movf	PalabraRecepcion@rec^0,w,c
  2596  001042  26E1               	addwf	fsr1l,f,c
  2597  001044  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2598  001046  22E2               	addwfc	fsr1h,f,c
  2599  001048  50E7               	movf	indf1,w,c
  2600  00104A  0D0A               	mullw	10
  2601  00104C  50F3               	movf	243,w,c
  2602  00104E  2437               	addwf	??_PalabraRecepcion^0,w,c
  2603  001050  0FF0               	addlw	240
  2604  001052  6EDF               	movwf	indf2,c
  2605  001054                     
  2606                           ;ESTADO.c: 52:             rec->estados=1;
  2607  001054  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2608  001058  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2609  00105C  0E01               	movlw	1
  2610  00105E  6EDF               	movwf	indf2,c
  2611  001060                     
  2612                           ;ESTADO.c: 53:             rec->bandera=1;
  2613  001060  EE20 F004          	lfsr	2,4
  2614  001064  5035               	movf	PalabraRecepcion@rec^0,w,c
  2615  001066  26D9               	addwf	fsr2l,f,c
  2616  001068  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2617  00106A  22DA               	addwfc	fsr2h,f,c
  2618  00106C  0E01               	movlw	1
  2619  00106E  6EDF               	movwf	indf2,c
  2620  001070                     
  2621                           ;ESTADO.c: 54:             rec->error=0;
  2622  001070  EE20 F005          	lfsr	2,5
  2623  001074  5035               	movf	PalabraRecepcion@rec^0,w,c
  2624  001076  26D9               	addwf	fsr2l,f,c
  2625  001078  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2626  00107A  22DA               	addwfc	fsr2h,f,c
  2627  00107C  0E00               	movlw	0
  2628  00107E  6EDF               	movwf	indf2,c
  2629                           
  2630                           ;ESTADO.c: 55:         }
  2631  001080  EF7B  F008         	goto	l652
  2632  001084                     l2170:
  2633                           
  2634                           ;ESTADO.c: 57:             rec->estados=1;
  2635  001084  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2636  001088  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2637  00108C  0E01               	movlw	1
  2638  00108E  6EDF               	movwf	indf2,c
  2639  001090                     
  2640                           ;ESTADO.c: 58:             rec->error=1;
  2641  001090  EE20 F005          	lfsr	2,5
  2642  001094  5035               	movf	PalabraRecepcion@rec^0,w,c
  2643  001096  26D9               	addwf	fsr2l,f,c
  2644  001098  5036               	movf	(PalabraRecepcion@rec+1)^0,w,c
  2645  00109A  22DA               	addwfc	fsr2h,f,c
  2646  00109C  0E01               	movlw	1
  2647  00109E  6EDF               	movwf	indf2,c
  2648  0010A0  EF7B  F008         	goto	l652
  2649  0010A4                     l2174:
  2650                           
  2651                           ;ESTADO.c: 63:         rec->estados=1;
  2652  0010A4  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2653  0010A8  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2654  0010AC  0E01               	movlw	1
  2655  0010AE  6EDF               	movwf	indf2,c
  2656                           
  2657                           ;ESTADO.c: 64:     }
  2658  0010B0  EF7B  F008         	goto	l652
  2659  0010B4                     l2176:
  2660  0010B4  C035  FFD9         	movff	PalabraRecepcion@rec,fsr2l
  2661  0010B8  C036  FFDA         	movff	PalabraRecepcion@rec+1,fsr2h
  2662  0010BC  50DF               	movf	indf2,w,c
  2663  0010BE  6E37               	movwf	??_PalabraRecepcion^0,c
  2664  0010C0  6A38               	clrf	(??_PalabraRecepcion+1)^0,c
  2665                           
  2666                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2667                           ; Switch size 1, requested type "simple"
  2668                           ; Number of cases is 1, Range of values is 0 to 0
  2669                           ; switch strategies available:
  2670                           ; Name         Instructions Cycles
  2671                           ; simple_byte            4     3 (average)
  2672                           ;	Chosen strategy is simple_byte
  2673  0010C2  5038               	movf	(??_PalabraRecepcion+1)^0,w,c
  2674  0010C4  0A00               	xorlw	0	; case 0
  2675  0010C6  B4D8               	btfsc	status,2,c
  2676  0010C8  EF68  F008         	goto	l2296
  2677  0010CC  EF52  F008         	goto	l2174
  2678  0010D0                     l2296:
  2679                           
  2680                           ; Switch size 1, requested type "simple"
  2681                           ; Number of cases is 4, Range of values is 1 to 4
  2682                           ; switch strategies available:
  2683                           ; Name         Instructions Cycles
  2684                           ; simple_byte           13     7 (average)
  2685                           ;	Chosen strategy is simple_byte
  2686  0010D0  5037               	movf	??_PalabraRecepcion^0,w,c
  2687  0010D2  0A01               	xorlw	1	; case 1
  2688  0010D4  B4D8               	btfsc	status,2,c
  2689  0010D6  EF86  F007         	goto	l2128
  2690  0010DA  0A03               	xorlw	3	; case 2
  2691  0010DC  B4D8               	btfsc	status,2,c
  2692  0010DE  EFA7  F007         	goto	l2136
  2693  0010E2  0A01               	xorlw	1	; case 3
  2694  0010E4  B4D8               	btfsc	status,2,c
  2695  0010E6  EFD7  F007         	goto	l2148
  2696  0010EA  0A07               	xorlw	7	; case 4
  2697  0010EC  B4D8               	btfsc	status,2,c
  2698  0010EE  EF07  F008         	goto	l2160
  2699  0010F2  EF52  F008         	goto	l2174
  2700  0010F6                     l652:
  2701  0010F6  0012               	return		;funcret
  2702  0010F8                     __end_of_PalabraRecepcion:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _EUSART1_is_rx_ready *****************
  2706 ;; Defined at:
  2707 ;;		line 137 in file "mcc_generated_files/eusart1.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      _Bool 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 4
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_main
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text25
  2736  0017EE                     __ptext25:
  2737                           	callstack 0
  2738  0017EE                     _EUSART1_is_rx_ready:
  2739                           	callstack 26
  2740  0017EE                     
  2741                           ;mcc_generated_files/eusart1.c: 139:     return (eusart1RxCount ? 1 : 0);
  2742  0017EE  5027               	movf	_eusart1RxCount^0,w,c	;volatile
  2743  0017F0  A4D8               	btfss	status,2,c
  2744  0017F2  EFFD  F00B         	goto	u61
  2745  0017F6  EF00  F00C         	goto	u60
  2746  0017FA                     u61:
  2747  0017FA  0E01               	movlw	1
  2748  0017FC  EF01  F00C         	goto	u70
  2749  001800                     u60:
  2750  001800  0E00               	movlw	0
  2751  001802                     u70:
  2752  001802  0012               	return		;funcret
  2753  001804                     __end_of_EUSART1_is_rx_ready:
  2754                           	callstack 0
  2755                           
  2756 ;; *************** function _EUSART1_Write *****************
  2757 ;; Defined at:
  2758 ;;		line 173 in file "mcc_generated_files/eusart1.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  txData          1    wreg     unsigned char 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  txData          1    6[COMRAM] unsigned char 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      void 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2773 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2775 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2776 ;;Total ram usage:        1 bytes
  2777 ;; Hardware stack levels used: 1
  2778 ;; Hardware stack levels required when called: 4
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_main
  2783 ;;		_putch
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           	psect	text26
  2788  0014B6                     __ptext26:
  2789                           	callstack 0
  2790  0014B6                     _EUSART1_Write:
  2791                           	callstack 26
  2792                           
  2793                           ;incstack = 0
  2794                           ;EUSART1_Write@txData stored from wreg
  2795  0014B6  6E34               	movwf	EUSART1_Write@txData^0,c
  2796  0014B8                     l1600:
  2797                           
  2798                           ;mcc_generated_files/eusart1.c: 175:     while(0 == eusart1TxBufferRemaining)
  2799  0014B8  5056               	movf	_eusart1TxBufferRemaining^0,w,c	;volatile
  2800  0014BA  B4D8               	btfsc	status,2,c
  2801  0014BC  EF62  F00A         	goto	u101
  2802  0014C0  EF64  F00A         	goto	u100
  2803  0014C4                     u101:
  2804  0014C4  EF5C  F00A         	goto	l1600
  2805  0014C8                     u100:
  2806  0014C8                     
  2807                           ;mcc_generated_files/eusart1.c: 179:     if(0 == PIE3bits.TX1IE)
  2808  0014C8  010E               	movlb	14	; () banked
  2809  0014CA  B9C5               	btfsc	197,4,b	;volatile
  2810  0014CC  EF6A  F00A         	goto	u111
  2811  0014D0  EF6C  F00A         	goto	u110
  2812  0014D4                     u111:
  2813  0014D4  EF70  F00A         	goto	l334
  2814  0014D8                     u110:
  2815  0014D8                     
  2816                           ; BSR set to: 14
  2817                           ;mcc_generated_files/eusart1.c: 180:     {;mcc_generated_files/eusart1.c: 181:         T
      +                          X1REG = txData;
  2818  0014D8  C034  FF9A         	movff	EUSART1_Write@txData,3994	;volatile
  2819                           
  2820                           ;mcc_generated_files/eusart1.c: 182:     }
  2821  0014DC  EF85  F00A         	goto	l1614
  2822  0014E0                     l334:
  2823                           
  2824                           ; BSR set to: 14
  2825                           ;mcc_generated_files/eusart1.c: 184:     {;mcc_generated_files/eusart1.c: 185:         P
      +                          IE3bits.TX1IE = 0;
  2826  0014E0  99C5               	bcf	197,4,b	;volatile
  2827  0014E2                     
  2828                           ; BSR set to: 14
  2829                           ;mcc_generated_files/eusart1.c: 186:         eusart1TxBuffer[eusart1TxHead++] = txData;
  2830  0014E2  0E11               	movlw	low _eusart1TxBuffer
  2831  0014E4  242B               	addwf	_eusart1TxHead^0,w,c	;volatile
  2832  0014E6  6ED9               	movwf	fsr2l,c
  2833  0014E8  6ADA               	clrf	fsr2h,c
  2834  0014EA  0E00               	movlw	high _eusart1TxBuffer
  2835  0014EC  22DA               	addwfc	fsr2h,f,c
  2836  0014EE  C034  FFDF         	movff	EUSART1_Write@txData,indf2
  2837  0014F2                     
  2838                           ; BSR set to: 14
  2839  0014F2  2A2B               	incf	_eusart1TxHead^0,f,c	;volatile
  2840  0014F4                     
  2841                           ; BSR set to: 14
  2842                           ;mcc_generated_files/eusart1.c: 187:         if(sizeof(eusart1TxBuffer) <= eusart1TxHead
      +                          )
  2843  0014F4  0E07               	movlw	7
  2844  0014F6  642B               	cpfsgt	_eusart1TxHead^0,c	;volatile
  2845  0014F8  EF80  F00A         	goto	u121
  2846  0014FC  EF82  F00A         	goto	u120
  2847  001500                     u121:
  2848  001500  EF84  F00A         	goto	l1612
  2849  001504                     u120:
  2850  001504                     
  2851                           ; BSR set to: 14
  2852                           ;mcc_generated_files/eusart1.c: 188:         {;mcc_generated_files/eusart1.c: 189:      
      +                                 eusart1TxHead = 0;
  2853  001504  0E00               	movlw	0
  2854  001506  6E2B               	movwf	_eusart1TxHead^0,c	;volatile
  2855  001508                     l1612:
  2856                           
  2857                           ; BSR set to: 14
  2858                           ;mcc_generated_files/eusart1.c: 191:         eusart1TxBufferRemaining--;
  2859  001508  0656               	decf	_eusart1TxBufferRemaining^0,f,c	;volatile
  2860  00150A                     l1614:
  2861                           
  2862                           ; BSR set to: 14
  2863                           ;mcc_generated_files/eusart1.c: 193:     PIE3bits.TX1IE = 1;
  2864  00150A  89C5               	bsf	197,4,b	;volatile
  2865  00150C                     
  2866                           ; BSR set to: 14
  2867  00150C  0012               	return		;funcret
  2868  00150E                     __end_of_EUSART1_Write:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _EUSART1_Read *****************
  2872 ;; Defined at:
  2873 ;;		line 151 in file "mcc_generated_files/eusart1.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;		None
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  readValue       1    6[COMRAM] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      unsigned char 
  2880 ;; Registers used:
  2881 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2890 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2891 ;;Total ram usage:        1 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 4
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_main
  2898 ;;		_getch
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text27
  2903  00150E                     __ptext27:
  2904                           	callstack 0
  2905  00150E                     _EUSART1_Read:
  2906                           	callstack 26
  2907  00150E                     l1578:
  2908                           
  2909                           ;mcc_generated_files/eusart1.c: 155:     while(0 == eusart1RxCount)
  2910  00150E  5027               	movf	_eusart1RxCount^0,w,c	;volatile
  2911  001510  B4D8               	btfsc	status,2,c
  2912  001512  EF8D  F00A         	goto	u81
  2913  001516  EF8F  F00A         	goto	u80
  2914  00151A                     u81:
  2915  00151A  EF87  F00A         	goto	l1578
  2916  00151E                     u80:
  2917  00151E                     
  2918                           ;mcc_generated_files/eusart1.c: 159:     eusart1RxLastError = eusart1RxStatusBuffer[eusa
      +                          rt1RxTail];
  2919  00151E  0E01               	movlw	low _eusart1RxStatusBuffer
  2920  001520  2428               	addwf	_eusart1RxTail^0,w,c	;volatile
  2921  001522  6ED9               	movwf	fsr2l,c
  2922  001524  6ADA               	clrf	fsr2h,c
  2923  001526  0E00               	movlw	high _eusart1RxStatusBuffer
  2924  001528  22DA               	addwfc	fsr2h,f,c
  2925  00152A  50DF               	movf	indf2,w,c
  2926  00152C  6E26               	movwf	_eusart1RxLastError^0,c	;volatile
  2927                           
  2928                           ;mcc_generated_files/eusart1.c: 161:     readValue = eusart1RxBuffer[eusart1RxTail++];
  2929  00152E  0E09               	movlw	low _eusart1RxBuffer
  2930  001530  2428               	addwf	_eusart1RxTail^0,w,c	;volatile
  2931  001532  6ED9               	movwf	fsr2l,c
  2932  001534  6ADA               	clrf	fsr2h,c
  2933  001536  0E00               	movlw	high _eusart1RxBuffer
  2934  001538  22DA               	addwfc	fsr2h,f,c
  2935  00153A  50DF               	movf	indf2,w,c
  2936  00153C  6E34               	movwf	EUSART1_Read@readValue^0,c
  2937  00153E  2A28               	incf	_eusart1RxTail^0,f,c	;volatile
  2938  001540                     
  2939                           ;mcc_generated_files/eusart1.c: 162:     if(sizeof(eusart1RxBuffer) <= eusart1RxTail)
  2940  001540  0E07               	movlw	7
  2941  001542  6428               	cpfsgt	_eusart1RxTail^0,c	;volatile
  2942  001544  EFA6  F00A         	goto	u91
  2943  001548  EFA8  F00A         	goto	u90
  2944  00154C                     u91:
  2945  00154C  EFAA  F00A         	goto	l1588
  2946  001550                     u90:
  2947  001550                     
  2948                           ;mcc_generated_files/eusart1.c: 163:     {;mcc_generated_files/eusart1.c: 164:         e
      +                          usart1RxTail = 0;
  2949  001550  0E00               	movlw	0
  2950  001552  6E28               	movwf	_eusart1RxTail^0,c	;volatile
  2951  001554                     l1588:
  2952                           
  2953                           ;mcc_generated_files/eusart1.c: 166:     PIE3bits.RC1IE = 0;
  2954  001554  010E               	movlb	14	; () banked
  2955  001556  9BC5               	bcf	197,5,b	;volatile
  2956  001558                     
  2957                           ; BSR set to: 14
  2958                           ;mcc_generated_files/eusart1.c: 167:     eusart1RxCount--;
  2959  001558  0627               	decf	_eusart1RxCount^0,f,c	;volatile
  2960  00155A                     
  2961                           ; BSR set to: 14
  2962                           ;mcc_generated_files/eusart1.c: 168:     PIE3bits.RC1IE = 1;
  2963  00155A  8BC5               	bsf	197,5,b	;volatile
  2964  00155C                     
  2965                           ; BSR set to: 14
  2966                           ;mcc_generated_files/eusart1.c: 170:     return readValue;
  2967  00155C  5034               	movf	EUSART1_Read@readValue^0,w,c
  2968  00155E                     
  2969                           ; BSR set to: 14
  2970  00155E  0012               	return		;funcret
  2971  001560                     __end_of_EUSART1_Read:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _INTERRUPT_InterruptManager *****************
  2975 ;; Defined at:
  2976 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2992 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2993 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2994 ;;Total ram usage:        4 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 3
  2997 ;; This function calls:
  2998 ;;		Absolute function
  2999 ;;		_ADCC_ISR
  3000 ;;		_EUSART1_Receive_ISR
  3001 ;;		_EUSART1_Transmit_ISR
  3002 ;; This function is called by:
  3003 ;;		Interrupt level 2
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007                           	psect	intcode
  3008  000008                     __pintcode:
  3009                           	callstack 0
  3010  000008                     _INTERRUPT_InterruptManager:
  3011                           	callstack 24
  3012                           
  3013                           ; BSR set to: 14
  3014                           ;incstack = 0
  3015  000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3016  00000A  CFFA F030          	movff	pclath,??_INTERRUPT_InterruptManager
  3017  00000E  CFFB F031          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  3018  000012  CFD9 F032          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  3019  000016  CFDA F033          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  3020  00001A                     
  3021                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  3022  00001A  ACF2               	btfss	242,6,c	;volatile
  3023  00001C  EF12  F000         	goto	i2u67_41
  3024  000020  EF14  F000         	goto	i2u67_40
  3025  000024                     i2u67_41:
  3026  000024  EF5F  F000         	goto	i2l234
  3027  000028                     i2u67_40:
  3028  000028                     
  3029                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE3bits.TX1IE == 1 && PIR3bits.TX1IF == 1)
  3030  000028  010E               	movlb	14	; () banked
  3031  00002A  A9C5               	btfss	197,4,b	;volatile
  3032  00002C  EF1A  F000         	goto	i2u68_41
  3033  000030  EF1C  F000         	goto	i2u68_40
  3034  000034                     i2u68_41:
  3035  000034  EF31  F000         	goto	i2l227
  3036  000038                     i2u68_40:
  3037  000038                     
  3038                           ; BSR set to: 14
  3039  000038  A9CD               	btfss	205,4,b	;volatile
  3040  00003A  EF21  F000         	goto	i2u69_41
  3041  00003E  EF23  F000         	goto	i2u69_40
  3042  000042                     i2u69_41:
  3043  000042  EF31  F000         	goto	i2l227
  3044  000046                     i2u69_40:
  3045  000046                     
  3046                           ; BSR set to: 14
  3047                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART1_TxDefaultInterruptHandler();
  3048  000046  D802               	call	i2u70_48
  3049  000048  EF2F  F000         	goto	i2u70_49
  3050  00004C                     i2u70_48:
  3051  00004C  0005               	push	
  3052  00004E  6EFA               	movwf	pclath,c
  3053  000050  5054               	movf	_EUSART1_TxDefaultInterruptHandler^0,w,c
  3054  000052  6EFD               	movwf	tosl,c
  3055  000054  5055               	movf	(_EUSART1_TxDefaultInterruptHandler+1)^0,w,c
  3056  000056  6EFE               	movwf	tosh,c
  3057  000058  6AFF               	clrf	tosu,c
  3058  00005A  50FA               	movf	pclath,w,c
  3059  00005C  0012               	return		;indir
  3060  00005E                     i2u70_49:
  3061                           
  3062                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  3063  00005E  EF5F  F000         	goto	i2l234
  3064  000062                     i2l227:
  3065                           
  3066                           ; BSR set to: 14
  3067  000062  ABC5               	btfss	197,5,b	;volatile
  3068  000064  EF36  F000         	goto	i2u71_41
  3069  000068  EF38  F000         	goto	i2u71_40
  3070  00006C                     i2u71_41:
  3071  00006C  EF4D  F000         	goto	i2l229
  3072  000070                     i2u71_40:
  3073  000070                     
  3074                           ; BSR set to: 14
  3075  000070  ABCD               	btfss	205,5,b	;volatile
  3076  000072  EF3D  F000         	goto	i2u72_41
  3077  000076  EF3F  F000         	goto	i2u72_40
  3078  00007A                     i2u72_41:
  3079  00007A  EF4D  F000         	goto	i2l229
  3080  00007E                     i2u72_40:
  3081  00007E                     
  3082                           ; BSR set to: 14
  3083                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART1_RxDefaultInterruptHandler();
  3084  00007E  D802               	call	i2u73_48
  3085  000080  EF4B  F000         	goto	i2u73_49
  3086  000084                     i2u73_48:
  3087  000084  0005               	push	
  3088  000086  6EFA               	movwf	pclath,c
  3089  000088  5052               	movf	_EUSART1_RxDefaultInterruptHandler^0,w,c
  3090  00008A  6EFD               	movwf	tosl,c
  3091  00008C  5053               	movf	(_EUSART1_RxDefaultInterruptHandler+1)^0,w,c
  3092  00008E  6EFE               	movwf	tosh,c
  3093  000090  6AFF               	clrf	tosu,c
  3094  000092  50FA               	movf	pclath,w,c
  3095  000094  0012               	return		;indir
  3096  000096                     i2u73_49:
  3097                           
  3098                           ;mcc_generated_files/interrupt_manager.c: 70:         }
  3099  000096  EF5F  F000         	goto	i2l234
  3100  00009A                     i2l229:
  3101                           
  3102                           ; BSR set to: 14
  3103  00009A  A1C3               	btfss	195,0,b	;volatile
  3104  00009C  EF52  F000         	goto	i2u74_41
  3105  0000A0  EF54  F000         	goto	i2u74_40
  3106  0000A4                     i2u74_41:
  3107  0000A4  EF5F  F000         	goto	i2l228
  3108  0000A8                     i2u74_40:
  3109  0000A8                     
  3110                           ; BSR set to: 14
  3111  0000A8  A1CB               	btfss	203,0,b	;volatile
  3112  0000AA  EF59  F000         	goto	i2u75_41
  3113  0000AE  EF5B  F000         	goto	i2u75_40
  3114  0000B2                     i2u75_41:
  3115  0000B2  EF5F  F000         	goto	i2l228
  3116  0000B6                     i2u75_40:
  3117  0000B6                     
  3118                           ; BSR set to: 14
  3119                           ;mcc_generated_files/interrupt_manager.c: 72:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 73:             ADCC_ISR();
  3120  0000B6  EC30  F00B         	call	_ADCC_ISR	;wreg free
  3121                           
  3122                           ;mcc_generated_files/interrupt_manager.c: 74:         }
  3123  0000BA  EF5F  F000         	goto	i2l234
  3124  0000BE                     i2l228:
  3125  0000BE                     i2l234:
  3126  0000BE  C033  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  3127  0000C2  C032  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  3128  0000C6  C031  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  3129  0000CA  C030  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  3130  0000CE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3131  0000D0  0011               	retfie		f
  3132  0000D2                     __end_of_INTERRUPT_InterruptManager:
  3133                           	callstack 0
  3134                           
  3135 ;; *************** function _EUSART1_Transmit_ISR *****************
  3136 ;; Defined at:
  3137 ;;		line 206 in file "mcc_generated_files/eusart1.c"
  3138 ;; Parameters:    Size  Location     Type
  3139 ;;		None
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;		None
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      void 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3155 ;;Total ram usage:        0 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_EUSART1_Initialize
  3161 ;;		_INTERRUPT_InterruptManager
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text29
  3166  0015AE                     __ptext29:
  3167                           	callstack 0
  3168  0015AE                     _EUSART1_Transmit_ISR:
  3169                           	callstack 26
  3170  0015AE                     
  3171                           ;mcc_generated_files/eusart1.c: 210:     if(sizeof(eusart1TxBuffer) > eusart1TxBufferRem
      +                          aining)
  3172  0015AE  0E08               	movlw	8
  3173  0015B0  6056               	cpfslt	_eusart1TxBufferRemaining^0,c	;volatile
  3174  0015B2  EFDD  F00A         	goto	i2u52_41
  3175  0015B6  EFDF  F00A         	goto	i2u52_40
  3176  0015BA                     i2u52_41:
  3177  0015BA  EFF5  F00A         	goto	i2l346
  3178  0015BE                     i2u52_40:
  3179  0015BE                     
  3180                           ;mcc_generated_files/eusart1.c: 211:     {;mcc_generated_files/eusart1.c: 212:         T
      +                          X1REG = eusart1TxBuffer[eusart1TxTail++];
  3181  0015BE  0E11               	movlw	low _eusart1TxBuffer
  3182  0015C0  242A               	addwf	_eusart1TxTail^0,w,c	;volatile
  3183  0015C2  6ED9               	movwf	fsr2l,c
  3184  0015C4  6ADA               	clrf	fsr2h,c
  3185  0015C6  0E00               	movlw	high _eusart1TxBuffer
  3186  0015C8  22DA               	addwfc	fsr2h,f,c
  3187  0015CA  50DF               	movf	indf2,w,c
  3188  0015CC  6E9A               	movwf	154,c	;volatile
  3189  0015CE  2A2A               	incf	_eusart1TxTail^0,f,c	;volatile
  3190  0015D0                     
  3191                           ;mcc_generated_files/eusart1.c: 213:         if(sizeof(eusart1TxBuffer) <= eusart1TxTail
      +                          )
  3192  0015D0  0E07               	movlw	7
  3193  0015D2  642A               	cpfsgt	_eusart1TxTail^0,c	;volatile
  3194  0015D4  EFEE  F00A         	goto	i2u53_41
  3195  0015D8  EFF0  F00A         	goto	i2u53_40
  3196  0015DC                     i2u53_41:
  3197  0015DC  EFF2  F00A         	goto	i2l2098
  3198  0015E0                     i2u53_40:
  3199  0015E0                     
  3200                           ;mcc_generated_files/eusart1.c: 214:         {;mcc_generated_files/eusart1.c: 215:      
      +                                 eusart1TxTail = 0;
  3201  0015E0  0E00               	movlw	0
  3202  0015E2  6E2A               	movwf	_eusart1TxTail^0,c	;volatile
  3203  0015E4                     i2l2098:
  3204                           
  3205                           ;mcc_generated_files/eusart1.c: 217:         eusart1TxBufferRemaining++;
  3206  0015E4  2A56               	incf	_eusart1TxBufferRemaining^0,f,c	;volatile
  3207                           
  3208                           ;mcc_generated_files/eusart1.c: 218:     }
  3209  0015E6  EFF7  F00A         	goto	i2l349
  3210  0015EA                     i2l346:
  3211                           
  3212                           ;mcc_generated_files/eusart1.c: 220:     {;mcc_generated_files/eusart1.c: 221:         P
      +                          IE3bits.TX1IE = 0;
  3213  0015EA  010E               	movlb	14	; () banked
  3214  0015EC  99C5               	bcf	197,4,b	;volatile
  3215  0015EE                     i2l349:
  3216  0015EE  0012               	return		;funcret
  3217  0015F0                     __end_of_EUSART1_Transmit_ISR:
  3218                           	callstack 0
  3219                           
  3220 ;; *************** function _EUSART1_Receive_ISR *****************
  3221 ;; Defined at:
  3222 ;;		line 225 in file "mcc_generated_files/eusart1.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;		None
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1    wreg      void 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3231 ;; Tracked objects:
  3232 ;;		On entry : 0/0
  3233 ;;		On exit  : 0/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used: 1
  3242 ;; Hardware stack levels required when called: 2
  3243 ;; This function calls:
  3244 ;;		Absolute function
  3245 ;;		_EUSART1_DefaultErrorHandler
  3246 ;;		_EUSART1_DefaultFramingErrorHandler
  3247 ;;		_EUSART1_DefaultOverrunErrorHandler
  3248 ;;		_EUSART1_RxDataHandler
  3249 ;; This function is called by:
  3250 ;;		_EUSART1_Initialize
  3251 ;;		_INTERRUPT_InterruptManager
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text30
  3256  0011DE                     __ptext30:
  3257                           	callstack 0
  3258  0011DE                     _EUSART1_Receive_ISR:
  3259                           	callstack 24
  3260  0011DE                     
  3261                           ;mcc_generated_files/eusart1.c: 228:     eusart1RxStatusBuffer[eusart1RxHead].status = 0
      +                          ;
  3262  0011DE  0E01               	movlw	low _eusart1RxStatusBuffer
  3263  0011E0  2429               	addwf	_eusart1RxHead^0,w,c	;volatile
  3264  0011E2  6ED9               	movwf	fsr2l,c
  3265  0011E4  6ADA               	clrf	fsr2h,c
  3266  0011E6  0E00               	movlw	high _eusart1RxStatusBuffer
  3267  0011E8  22DA               	addwfc	fsr2h,f,c
  3268  0011EA  0E00               	movlw	0
  3269  0011EC  6EDF               	movwf	indf2,c
  3270  0011EE                     
  3271                           ;mcc_generated_files/eusart1.c: 230:     if(RC1STAbits.FERR){
  3272  0011EE  A49D               	btfss	157,2,c	;volatile
  3273  0011F0  EFFC  F008         	goto	i2u54_41
  3274  0011F4  EFFE  F008         	goto	i2u54_40
  3275  0011F8                     i2u54_41:
  3276  0011F8  EF11  F009         	goto	i2l2108
  3277  0011FC                     i2u54_40:
  3278  0011FC                     
  3279                           ;mcc_generated_files/eusart1.c: 231:         eusart1RxStatusBuffer[eusart1RxHead].ferr =
      +                           1;
  3280  0011FC  0E01               	movlw	low _eusart1RxStatusBuffer
  3281  0011FE  2429               	addwf	_eusart1RxHead^0,w,c	;volatile
  3282  001200  6ED9               	movwf	fsr2l,c
  3283  001202  6ADA               	clrf	fsr2h,c
  3284  001204  0E00               	movlw	high _eusart1RxStatusBuffer
  3285  001206  22DA               	addwfc	fsr2h,f,c
  3286  001208  82DF               	bsf	indf2,1,c
  3287  00120A                     
  3288                           ;mcc_generated_files/eusart1.c: 232:         EUSART1_FramingErrorHandler();
  3289  00120A  D802               	call	i2u55_48
  3290  00120C  EF11  F009         	goto	i2u55_49
  3291  001210                     i2u55_48:
  3292  001210  0005               	push	
  3293  001212  6EFA               	movwf	pclath,c
  3294  001214  5050               	movf	_EUSART1_FramingErrorHandler^0,w,c
  3295  001216  6EFD               	movwf	tosl,c
  3296  001218  5051               	movf	(_EUSART1_FramingErrorHandler+1)^0,w,c
  3297  00121A  6EFE               	movwf	tosh,c
  3298  00121C  6AFF               	clrf	tosu,c
  3299  00121E  50FA               	movf	pclath,w,c
  3300  001220  0012               	return		;indir
  3301  001222                     i2u55_49:
  3302  001222                     i2l2108:
  3303                           
  3304                           ;mcc_generated_files/eusart1.c: 235:     if(RC1STAbits.OERR){
  3305  001222  A29D               	btfss	157,1,c	;volatile
  3306  001224  EF16  F009         	goto	i2u56_41
  3307  001228  EF18  F009         	goto	i2u56_40
  3308  00122C                     i2u56_41:
  3309  00122C  EF2B  F009         	goto	i2l2114
  3310  001230                     i2u56_40:
  3311  001230                     
  3312                           ;mcc_generated_files/eusart1.c: 236:         eusart1RxStatusBuffer[eusart1RxHead].oerr =
      +                           1;
  3313  001230  0E01               	movlw	low _eusart1RxStatusBuffer
  3314  001232  2429               	addwf	_eusart1RxHead^0,w,c	;volatile
  3315  001234  6ED9               	movwf	fsr2l,c
  3316  001236  6ADA               	clrf	fsr2h,c
  3317  001238  0E00               	movlw	high _eusart1RxStatusBuffer
  3318  00123A  22DA               	addwfc	fsr2h,f,c
  3319  00123C  84DF               	bsf	indf2,2,c
  3320  00123E                     
  3321                           ;mcc_generated_files/eusart1.c: 237:         EUSART1_OverrunErrorHandler();
  3322  00123E  D802               	call	i2u57_48
  3323  001240  EF2B  F009         	goto	i2u57_49
  3324  001244                     i2u57_48:
  3325  001244  0005               	push	
  3326  001246  6EFA               	movwf	pclath,c
  3327  001248  504E               	movf	_EUSART1_OverrunErrorHandler^0,w,c
  3328  00124A  6EFD               	movwf	tosl,c
  3329  00124C  504F               	movf	(_EUSART1_OverrunErrorHandler+1)^0,w,c
  3330  00124E  6EFE               	movwf	tosh,c
  3331  001250  6AFF               	clrf	tosu,c
  3332  001252  50FA               	movf	pclath,w,c
  3333  001254  0012               	return		;indir
  3334  001256                     i2u57_49:
  3335  001256                     i2l2114:
  3336                           
  3337                           ;mcc_generated_files/eusart1.c: 240:     if(eusart1RxStatusBuffer[eusart1RxHead].status)
      +                          {
  3338  001256  0E01               	movlw	low _eusart1RxStatusBuffer
  3339  001258  2429               	addwf	_eusart1RxHead^0,w,c	;volatile
  3340  00125A  6ED9               	movwf	fsr2l,c
  3341  00125C  6ADA               	clrf	fsr2h,c
  3342  00125E  0E00               	movlw	high _eusart1RxStatusBuffer
  3343  001260  22DA               	addwfc	fsr2h,f,c
  3344  001262  50DF               	movf	indf2,w,c
  3345  001264  B4D8               	btfsc	status,2,c
  3346  001266  EF37  F009         	goto	i2u58_41
  3347  00126A  EF39  F009         	goto	i2u58_40
  3348  00126E                     i2u58_41:
  3349  00126E  EF47  F009         	goto	i2l2118
  3350  001272                     i2u58_40:
  3351  001272                     
  3352                           ;mcc_generated_files/eusart1.c: 241:         EUSART1_ErrorHandler();
  3353  001272  D802               	call	i2u59_48
  3354  001274  EF45  F009         	goto	i2u59_49
  3355  001278                     i2u59_48:
  3356  001278  0005               	push	
  3357  00127A  6EFA               	movwf	pclath,c
  3358  00127C  504C               	movf	_EUSART1_ErrorHandler^0,w,c
  3359  00127E  6EFD               	movwf	tosl,c
  3360  001280  504D               	movf	(_EUSART1_ErrorHandler+1)^0,w,c
  3361  001282  6EFE               	movwf	tosh,c
  3362  001284  6AFF               	clrf	tosu,c
  3363  001286  50FA               	movf	pclath,w,c
  3364  001288  0012               	return		;indir
  3365  00128A                     i2u59_49:
  3366                           
  3367                           ;mcc_generated_files/eusart1.c: 242:     } else {
  3368  00128A  EF49  F009         	goto	i2l356
  3369  00128E                     i2l2118:
  3370                           
  3371                           ;mcc_generated_files/eusart1.c: 243:         EUSART1_RxDataHandler();
  3372  00128E  EC76  F00B         	call	_EUSART1_RxDataHandler	;wreg free
  3373  001292                     i2l356:
  3374  001292  0012               	return		;funcret
  3375  001294                     __end_of_EUSART1_Receive_ISR:
  3376                           	callstack 0
  3377                           
  3378 ;; *************** function _EUSART1_DefaultOverrunErrorHandler *****************
  3379 ;; Defined at:
  3380 ;;		line 261 in file "mcc_generated_files/eusart1.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      void 
  3387 ;; Registers used:
  3388 ;;		None
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; This function calls:
  3401 ;;		Nothing
  3402 ;; This function is called by:
  3403 ;;		_EUSART1_Initialize
  3404 ;;		_EUSART1_Receive_ISR
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text31
  3409  001850                     __ptext31:
  3410                           	callstack 0
  3411  001850                     _EUSART1_DefaultOverrunErrorHandler:
  3412                           	callstack 25
  3413  001850                     
  3414                           ;mcc_generated_files/eusart1.c: 264:     RC1STAbits.CREN = 0;
  3415  001850  989D               	bcf	157,4,c	;volatile
  3416                           
  3417                           ;mcc_generated_files/eusart1.c: 265:     RC1STAbits.CREN = 1;
  3418  001852  889D               	bsf	157,4,c	;volatile
  3419  001854  0012               	return		;funcret
  3420  001856                     __end_of_EUSART1_DefaultOverrunErrorHandler:
  3421                           	callstack 0
  3422                           
  3423 ;; *************** function _EUSART1_DefaultFramingErrorHandler *****************
  3424 ;; Defined at:
  3425 ;;		line 259 in file "mcc_generated_files/eusart1.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;		None
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;		None
  3430 ;; Return value:  Size  Location     Type
  3431 ;;                  1    wreg      void 
  3432 ;; Registers used:
  3433 ;;		None
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3443 ;;Total ram usage:        0 bytes
  3444 ;; Hardware stack levels used: 1
  3445 ;; This function calls:
  3446 ;;		Nothing
  3447 ;; This function is called by:
  3448 ;;		_EUSART1_Initialize
  3449 ;;		_EUSART1_Receive_ISR
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text32
  3454  001866                     __ptext32:
  3455                           	callstack 0
  3456  001866                     _EUSART1_DefaultFramingErrorHandler:
  3457                           	callstack 25
  3458  001866  0012               	return		;funcret
  3459  001868                     __end_of_EUSART1_DefaultFramingErrorHandler:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _EUSART1_DefaultErrorHandler *****************
  3463 ;; Defined at:
  3464 ;;		line 269 in file "mcc_generated_files/eusart1.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3482 ;;Total ram usage:        0 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 1
  3485 ;; This function calls:
  3486 ;;		_EUSART1_RxDataHandler
  3487 ;; This function is called by:
  3488 ;;		_EUSART1_Initialize
  3489 ;;		_EUSART1_Receive_ISR
  3490 ;; This function uses a non-reentrant model
  3491 ;;
  3492                           
  3493                           	psect	text33
  3494  001856                     __ptext33:
  3495                           	callstack 0
  3496  001856                     _EUSART1_DefaultErrorHandler:
  3497                           	callstack 24
  3498  001856                     
  3499                           ;mcc_generated_files/eusart1.c: 270:     EUSART1_RxDataHandler();
  3500  001856  EC76  F00B         	call	_EUSART1_RxDataHandler	;wreg free
  3501  00185A  0012               	return		;funcret
  3502  00185C                     __end_of_EUSART1_DefaultErrorHandler:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function _EUSART1_RxDataHandler *****************
  3506 ;; Defined at:
  3507 ;;		line 249 in file "mcc_generated_files/eusart1.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;		None
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3525 ;;Total ram usage:        0 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_EUSART1_Receive_ISR
  3531 ;;		_EUSART1_DefaultErrorHandler
  3532 ;; This function uses a non-reentrant model
  3533 ;;
  3534                           
  3535                           	psect	text34
  3536  0016EC                     __ptext34:
  3537                           	callstack 0
  3538  0016EC                     _EUSART1_RxDataHandler:
  3539                           	callstack 25
  3540  0016EC                     
  3541                           ;mcc_generated_files/eusart1.c: 251:     eusart1RxBuffer[eusart1RxHead++] = RC1REG;
  3542  0016EC  0E09               	movlw	low _eusart1RxBuffer
  3543  0016EE  2429               	addwf	_eusart1RxHead^0,w,c	;volatile
  3544  0016F0  6ED9               	movwf	fsr2l,c
  3545  0016F2  6ADA               	clrf	fsr2h,c
  3546  0016F4  0E00               	movlw	high _eusart1RxBuffer
  3547  0016F6  22DA               	addwfc	fsr2h,f,c
  3548  0016F8  CF99 FFDF          	movff	3993,indf2	;volatile
  3549  0016FC  2A29               	incf	_eusart1RxHead^0,f,c	;volatile
  3550  0016FE                     
  3551                           ;mcc_generated_files/eusart1.c: 252:     if(sizeof(eusart1RxBuffer) <= eusart1RxHead)
  3552  0016FE  0E07               	movlw	7
  3553  001700  6429               	cpfsgt	_eusart1RxHead^0,c	;volatile
  3554  001702  EF85  F00B         	goto	i2u48_41
  3555  001706  EF87  F00B         	goto	i2u48_40
  3556  00170A                     i2u48_41:
  3557  00170A  EF89  F00B         	goto	i2l2008
  3558  00170E                     i2u48_40:
  3559  00170E                     
  3560                           ;mcc_generated_files/eusart1.c: 253:     {;mcc_generated_files/eusart1.c: 254:         e
      +                          usart1RxHead = 0;
  3561  00170E  0E00               	movlw	0
  3562  001710  6E29               	movwf	_eusart1RxHead^0,c	;volatile
  3563  001712                     i2l2008:
  3564                           
  3565                           ;mcc_generated_files/eusart1.c: 256:     eusart1RxCount++;
  3566  001712  2A27               	incf	_eusart1RxCount^0,f,c	;volatile
  3567  001714  0012               	return		;funcret
  3568  001716                     __end_of_EUSART1_RxDataHandler:
  3569                           	callstack 0
  3570                           
  3571 ;; *************** function _ADCC_ISR *****************
  3572 ;; Defined at:
  3573 ;;		line 298 in file "mcc_generated_files/adcc.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;		None
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;		None
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  1    wreg      void 
  3580 ;; Registers used:
  3581 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3591 ;;Total ram usage:        0 bytes
  3592 ;; Hardware stack levels used: 1
  3593 ;; Hardware stack levels required when called: 1
  3594 ;; This function calls:
  3595 ;;		Absolute function
  3596 ;;		_ADCC_DefaultInterruptHandler
  3597 ;;		_fin_adc
  3598 ;; This function is called by:
  3599 ;;		_INTERRUPT_InterruptManager
  3600 ;; This function uses a non-reentrant model
  3601 ;;
  3602                           
  3603                           	psect	text35
  3604  001660                     __ptext35:
  3605                           	callstack 0
  3606  001660                     _ADCC_ISR:
  3607                           	callstack 25
  3608  001660                     
  3609                           ;mcc_generated_files/adcc.c: 301:     PIR1bits.ADIF = 0;
  3610  001660  010E               	movlb	14	; () banked
  3611  001662  91CB               	bcf	203,0,b	;volatile
  3612  001664                     
  3613                           ; BSR set to: 14
  3614                           ;mcc_generated_files/adcc.c: 303:     if (ADCC_ADI_InterruptHandler)
  3615  001664  504A               	movf	_ADCC_ADI_InterruptHandler^0,w,c
  3616  001666  104B               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
  3617  001668  B4D8               	btfsc	status,2,c
  3618  00166A  EF39  F00B         	goto	i2u50_41
  3619  00166E  EF3B  F00B         	goto	i2u50_40
  3620  001672                     i2u50_41:
  3621  001672  EF47  F00B         	goto	i2l552
  3622  001676                     i2u50_40:
  3623  001676                     
  3624                           ; BSR set to: 14
  3625                           ;mcc_generated_files/adcc.c: 304:             ADCC_ADI_InterruptHandler();
  3626  001676  D802               	call	i2u51_48
  3627  001678  EF47  F00B         	goto	i2u51_49
  3628  00167C                     i2u51_48:
  3629  00167C  0005               	push	
  3630  00167E  6EFA               	movwf	pclath,c
  3631  001680  504A               	movf	_ADCC_ADI_InterruptHandler^0,w,c
  3632  001682  6EFD               	movwf	tosl,c
  3633  001684  504B               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
  3634  001686  6EFE               	movwf	tosh,c
  3635  001688  6AFF               	clrf	tosu,c
  3636  00168A  50FA               	movf	pclath,w,c
  3637  00168C  0012               	return		;indir
  3638  00168E                     i2u51_49:
  3639  00168E                     i2l552:
  3640  00168E  0012               	return		;funcret
  3641  001690                     __end_of_ADCC_ISR:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _ADCC_DefaultInterruptHandler *****************
  3645 ;; Defined at:
  3646 ;;		line 311 in file "mcc_generated_files/adcc.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		None
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;Total ram usage:        0 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_ADCC_Initialize
  3670 ;;		_ADCC_ISR
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text36
  3675  001868                     __ptext36:
  3676                           	callstack 0
  3677  001868                     _ADCC_DefaultInterruptHandler:
  3678                           	callstack 25
  3679  001868  0012               	return		;funcret
  3680  00186A                     __end_of_ADCC_DefaultInterruptHandler:
  3681                           	callstack 0
  3682                           
  3683 ;; *************** function _fin_adc *****************
  3684 ;; Defined at:
  3685 ;;		line 121 in file "main.c"
  3686 ;; Parameters:    Size  Location     Type
  3687 ;;		None
  3688 ;; Auto vars:     Size  Location     Type
  3689 ;;		None
  3690 ;; Return value:  Size  Location     Type
  3691 ;;                  1    wreg      void 
  3692 ;; Registers used:
  3693 ;;		wreg, status,2, status,0
  3694 ;; Tracked objects:
  3695 ;;		On entry : 0/0
  3696 ;;		On exit  : 0/0
  3697 ;;		Unchanged: 0/0
  3698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3703 ;;Total ram usage:        2 bytes
  3704 ;; Hardware stack levels used: 1
  3705 ;; This function calls:
  3706 ;;		Nothing
  3707 ;; This function is called by:
  3708 ;;		_main
  3709 ;;		_ADCC_ISR
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           
  3713                           	psect	text37
  3714  00173A                     __ptext37:
  3715                           	callstack 0
  3716  00173A                     _fin_adc:
  3717                           	callstack 25
  3718  00173A                     
  3719                           ;main.c: 122:     ADPCH=channel_ANA0;
  3720  00173A  0E00               	movlw	0
  3721  00173C  010F               	movlb	15	; () banked
  3722  00173E  6F5F               	movwf	95,b	;volatile
  3723  001740                     
  3724                           ; BSR set to: 15
  3725                           ;main.c: 123:     convertedValue=(adc_result_t)((ADRESH << 8) + ADRESL);
  3726  001740  5064               	movf	100,w,c	;volatile
  3727  001742  6E2F               	movwf	(??_fin_adc+1)^0,c
  3728  001744  6A2E               	clrf	??_fin_adc^0,c
  3729  001746  5063               	movf	99,w,c	;volatile
  3730  001748  242E               	addwf	??_fin_adc^0,w,c
  3731  00174A  6E1D               	movwf	_convertedValue^0,c
  3732  00174C  0E00               	movlw	0
  3733  00174E  202F               	addwfc	(??_fin_adc+1)^0,w,c
  3734  001750  6E1E               	movwf	(_convertedValue+1)^0,c
  3735  001752                     
  3736                           ; BSR set to: 15
  3737                           ;main.c: 124:     PIR4bits.TMR2IF=0;
  3738  001752  010E               	movlb	14	; () banked
  3739  001754  93CE               	bcf	206,1,b	;volatile
  3740  001756                     
  3741                           ; BSR set to: 14
  3742                           ;main.c: 125:     INTEPT=1;
  3743  001756  0E01               	movlw	1
  3744  001758  6E25               	movwf	_INTEPT^0,c
  3745  00175A                     
  3746                           ; BSR set to: 14
  3747                           ;main.c: 126:     PIR1bits.ADIF=0;
  3748  00175A  91CB               	bcf	203,0,b	;volatile
  3749  00175C                     
  3750                           ; BSR set to: 14
  3751  00175C  0012               	return		;funcret
  3752  00175E                     __end_of_fin_adc:
  3753                           	callstack 0
  3754                           
  3755                           	psect	text38
  3756  000000                     __ptext38:
  3757                           	callstack 0
  3758  000000                     
  3759                           	psect	rparam
  3760  0000                     
  3761                           	psect	temp
  3762  000059                     btemp:
  3763                           	callstack 0
  3764  000059                     	ds	1
  3765  0000                     int$flags	set	btemp
  3766  0000                     wtemp8	set	btemp+1
  3767  0000                     ttemp5	set	btemp+1
  3768  0000                     ttemp6	set	btemp+4
  3769  0000                     ttemp7	set	btemp+8
  3770                           
  3771                           	psect	idloc
  3772                           
  3773                           ;Config register IDLOC0 @ 0x200000
  3774                           ;	unspecified, using default values
  3775  200000                     	org	2097152
  3776  200000  0FFF               	dw	4095
  3777                           
  3778                           ;Config register IDLOC1 @ 0x200002
  3779                           ;	unspecified, using default values
  3780  200002                     	org	2097154
  3781  200002  0FFF               	dw	4095
  3782                           
  3783                           ;Config register IDLOC2 @ 0x200004
  3784                           ;	unspecified, using default values
  3785  200004                     	org	2097156
  3786  200004  0FFF               	dw	4095
  3787                           
  3788                           ;Config register IDLOC3 @ 0x200006
  3789                           ;	unspecified, using default values
  3790  200006                     	org	2097158
  3791  200006  0FFF               	dw	4095
  3792                           
  3793                           ;Config register IDLOC4 @ 0x200008
  3794                           ;	unspecified, using default values
  3795  200008                     	org	2097160
  3796  200008  0FFF               	dw	4095
  3797                           
  3798                           ;Config register IDLOC5 @ 0x20000A
  3799                           ;	unspecified, using default values
  3800  20000A                     	org	2097162
  3801  20000A  0FFF               	dw	4095
  3802                           
  3803                           ;Config register IDLOC6 @ 0x20000C
  3804                           ;	unspecified, using default values
  3805  20000C                     	org	2097164
  3806  20000C  0FFF               	dw	4095
  3807                           
  3808                           ;Config register IDLOC7 @ 0x20000E
  3809                           ;	unspecified, using default values
  3810  20000E                     	org	2097166
  3811  20000E  0FFF               	dw	4095
  3812                           
  3813                           	psect	config
  3814                           
  3815                           ;Config register CONFIG1L @ 0x300000
  3816                           ;	External Oscillator mode Selection bits
  3817                           ;	FEXTOSC = OFF, Oscillator not enabled
  3818                           ;	Power-up default value for COSC bits
  3819                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  3820  300000                     	org	3145728
  3821  300000  EC                 	db	236
  3822                           
  3823                           ;Config register CONFIG1H @ 0x300001
  3824                           ;	Clock Out Enable bit
  3825                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3826                           ;	Clock Switch Enable bit
  3827                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3828                           ;	Fail-Safe Clock Monitor Enable bit
  3829                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3830  300001                     	org	3145729
  3831  300001  FF                 	db	255
  3832                           
  3833                           ;Config register CONFIG2L @ 0x300002
  3834                           ;	Master Clear Enable bit
  3835                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3836                           ;	Power-up Timer Enable bit
  3837                           ;	PWRTE = OFF, Power up timer disabled
  3838                           ;	Low-power BOR enable bit
  3839                           ;	LPBOREN = OFF, ULPBOR disabled
  3840                           ;	Brown-out Reset Enable bits
  3841                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  3842  300002                     	org	3145730
  3843  300002  FF                 	db	255
  3844                           
  3845                           ;Config register CONFIG2H @ 0x300003
  3846                           ;	Brown Out Reset Voltage selection bits
  3847                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3848                           ;	ZCD Disable bit
  3849                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3850                           ;	PPSLOCK bit One-Way Set Enable bit
  3851                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  3852                           ;	Stack Full/Underflow Reset Enable bit
  3853                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3854                           ;	Debugger Enable bit
  3855                           ;	DEBUG = OFF, Background debugger disabled
  3856                           ;	Extended Instruction Set Enable bit
  3857                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3858  300003                     	org	3145731
  3859  300003  FF                 	db	255
  3860                           
  3861                           ;Config register CONFIG3L @ 0x300004
  3862                           ;	WDT Period Select bits
  3863                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3864                           ;	WDT operating mode
  3865                           ;	WDTE = OFF, WDT Disabled
  3866  300004                     	org	3145732
  3867  300004  9F                 	db	159
  3868                           
  3869                           ;Config register CONFIG3H @ 0x300005
  3870                           ;	WDT Window Select bits
  3871                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3872                           ;	WDT input clock selector
  3873                           ;	WDTCCS = SC, Software Control
  3874  300005                     	org	3145733
  3875  300005  FF                 	db	255
  3876                           
  3877                           ;Config register CONFIG4L @ 0x300006
  3878                           ;	Write Protection Block 0
  3879                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3880                           ;	Write Protection Block 1
  3881                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3882                           ;	Write Protection Block 2
  3883                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3884                           ;	Write Protection Block 3
  3885                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3886  300006                     	org	3145734
  3887  300006  FF                 	db	255
  3888                           
  3889                           ;Config register CONFIG4H @ 0x300007
  3890                           ;	Configuration Register Write Protection bit
  3891                           ;	WRTC = OFF, Configuration registers (300000-30000Bh) not write-protected
  3892                           ;	Boot Block Write Protection bit
  3893                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3894                           ;	Data EEPROM Write Protection bit
  3895                           ;	WRTD = OFF, Data EEPROM not write-protected
  3896                           ;	Scanner Enable bit
  3897                           ;	SCANE = ON, Scanner module is available for use, SCANMD bit can control the module
  3898                           ;	Low Voltage Programming Enable bit
  3899                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  3900  300007                     	org	3145735
  3901  300007  FF                 	db	255
  3902                           
  3903                           ;Config register CONFIG5L @ 0x300008
  3904                           ;	UserNVM Program Memory Code Protection bit
  3905                           ;	CP = OFF, UserNVM code protection disabled
  3906                           ;	DataNVM Memory Code Protection bit
  3907                           ;	CPD = OFF, DataNVM code protection disabled
  3908  300008                     	org	3145736
  3909  300008  FF                 	db	255
  3910                           
  3911                           ;Config register CONFIG5H @ 0x300009
  3912                           ;	unspecified, using default values
  3913  300009                     	org	3145737
  3914  300009  FF                 	db	255
  3915                           
  3916                           ;Config register CONFIG6L @ 0x30000A
  3917                           ;	Table Read Protection Block 0
  3918                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3919                           ;	Table Read Protection Block 1
  3920                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3921                           ;	Table Read Protection Block 2
  3922                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3923                           ;	Table Read Protection Block 3
  3924                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3925  30000A                     	org	3145738
  3926  30000A  FF                 	db	255
  3927                           
  3928                           ;Config register CONFIG6H @ 0x30000B
  3929                           ;	Boot Block Table Read Protection bit
  3930                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3931  30000B                     	org	3145739
  3932  30000B  FF                 	db	255
  3933                           tosu	equ	0xFFF
  3934                           tosh	equ	0xFFE
  3935                           tosl	equ	0xFFD
  3936                           stkptr	equ	0xFFC
  3937                           pclatu	equ	0xFFB
  3938                           pclath	equ	0xFFA
  3939                           pcl	equ	0xFF9
  3940                           tblptru	equ	0xFF8
  3941                           tblptrh	equ	0xFF7
  3942                           tblptrl	equ	0xFF6
  3943                           tablat	equ	0xFF5
  3944                           prodh	equ	0xFF4
  3945                           prodl	equ	0xFF3
  3946                           indf0	equ	0xFEF
  3947                           postinc0	equ	0xFEE
  3948                           postdec0	equ	0xFED
  3949                           preinc0	equ	0xFEC
  3950                           plusw0	equ	0xFEB
  3951                           fsr0h	equ	0xFEA
  3952                           fsr0l	equ	0xFE9
  3953                           wreg	equ	0xFE8
  3954                           indf1	equ	0xFE7
  3955                           postinc1	equ	0xFE6
  3956                           postdec1	equ	0xFE5
  3957                           preinc1	equ	0xFE4
  3958                           plusw1	equ	0xFE3
  3959                           fsr1h	equ	0xFE2
  3960                           fsr1l	equ	0xFE1
  3961                           bsr	equ	0xFE0
  3962                           indf2	equ	0xFDF
  3963                           postinc2	equ	0xFDE
  3964                           postdec2	equ	0xFDD
  3965                           preinc2	equ	0xFDC
  3966                           plusw2	equ	0xFDB
  3967                           fsr2h	equ	0xFDA
  3968                           fsr2l	equ	0xFD9
  3969                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    4
    Data        2
    BSS         45
    Persistent  13
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     28      88
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    retorneNumero@rec	PTR struct recepcion size(2) Largest target is 6
		 -> main@rece(COMRAM[6]), 

    tengocambiodefdM@rec	PTR struct recepcion size(2) Largest target is 6
		 -> main@rece(COMRAM[6]), 

    PalabraRecepcion@rec	PTR struct recepcion size(2) Largest target is 6
		 -> main@rece(COMRAM[6]), 

    inicializarRecepcion@rec	PTR struct recepcion size(2) Largest target is 6
		 -> main@rece(COMRAM[6]), 

    SPI1_WriteBlock@block	PTR void  size(2) Largest target is 2
		 -> bloque(COMRAM[2]), 

    SPI1_WriteBlock@data	PTR unsigned char  size(2) Largest target is 2
		 -> bloque(COMRAM[2]), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> fin_adc(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> fin_adc(), Absolute function(), ADCC_DefaultInterruptHandler(), 

    EUSART1_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Receive_ISR(), 

    EUSART1_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_Transmit_ISR(), 

    EUSART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), 

    EUSART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultErrorHandler(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultOverrunErrorHandler(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_DefaultFramingErrorHandler(), 

    EUSART1_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Receive_ISR(), 

    EUSART1_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART1_Transmit_ISR(), 


Critical Paths under _main in COMRAM

    _main->_SPI_W
    _EUSART1_Initialize->_EUSART1_SetErrorHandler
    _EUSART1_Initialize->_EUSART1_SetFramingErrorHandler
    _EUSART1_Initialize->_EUSART1_SetOverrunErrorHandler
    _EUSART1_Initialize->_EUSART1_SetRxInterruptHandler
    _EUSART1_Initialize->_EUSART1_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler
    _SPI_W->_SPI1_WriteBlock
    _SPI1_WriteBlock->_SPI1_ExchangeByte
    _PalabraRecepcion->_EUSART1_Read

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _ADCC_ISR->_fin_adc

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2556
                                             21 COMRAM     7     7      0
        _ADCC_SetADIInterruptHandler
                       _EUSART1_Read
                      _EUSART1_Write
                _EUSART1_is_rx_ready
                   _PalabraRecepcion
                          _SPI1_Open
                              _SPI_W
                  _SYSTEM_Initialize
                         _TMR2_Start
               _inicializarRecepcion
                      _retorneNumero
                   _tengocambiodefdM
 ---------------------------------------------------------------------------------
 (1) _tengocambiodefdM                                     2     0      2     120
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _retorneNumero                                        2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _inicializarRecepcion                                 2     0      2     142
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     664
                    _ADCC_Initialize
                 _EUSART1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0     490
            _EUSART1_SetErrorHandler
     _EUSART1_SetFramingErrorHandler
     _EUSART1_SetOverrunErrorHandler
      _EUSART1_SetRxInterruptHandler
      _EUSART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetTxInterruptHandler                        2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetRxInterruptHandler                        2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetOverrunErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetFramingErrorHandler                       2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART1_SetErrorHandler                              2     0      2      98
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     174
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          2     0      2     174
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SPI_W                                                8     6      2     401
                                             13 COMRAM     8     6      2
                    _SPI1_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _SPI1_WriteBlock                                      6     2      4     235
                                              7 COMRAM     6     2      4
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (3) _SPI1_ExchangeByte                                    1     1      0      15
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI1_Open                                            2     2      0      60
                                              6 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _PalabraRecepcion                                     5     3      2     714
                                              7 COMRAM     5     3      2
                       _EUSART1_Read (ARG)
 ---------------------------------------------------------------------------------
 (1) _EUSART1_is_rx_ready                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Write                                        1     1      0      30
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART1_Read                                         1     1      0      15
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           4     4      0       0
                                              2 COMRAM     4     4      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART1_Receive_ISR *
               _EUSART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART1_Receive_ISR                                  0     0      0       0
                   Absolute function *
        _EUSART1_DefaultErrorHandler *
 _EUSART1_DefaultFramingErrorHandler *
 _EUSART1_DefaultOverrunErrorHandler *
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART1_DefaultErrorHandler                          0     0      0       0
              _EUSART1_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART1_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _ADCC_ISR                                             0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                            _fin_adc *
 ---------------------------------------------------------------------------------
 (6) _fin_adc                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _ADCC_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _EUSART1_Read
   _EUSART1_Write
   _EUSART1_is_rx_ready
   _PalabraRecepcion
     _EUSART1_Read (ARG)
   _SPI1_Open
   _SPI_W
     _SPI1_WriteBlock
       _SPI1_ExchangeByte
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART1_Initialize
       _EUSART1_SetErrorHandler
       _EUSART1_SetFramingErrorHandler
       _EUSART1_SetOverrunErrorHandler
       _EUSART1_SetRxInterruptHandler
       _EUSART1_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
   _TMR2_Start
   _inicializarRecepcion
   _retorneNumero
   _tengocambiodefdM

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _fin_adc *
   _EUSART1_Receive_ISR *
     Absolute function(Fake) *
     _EUSART1_DefaultErrorHandler *
       _EUSART1_RxDataHandler
     _EUSART1_DefaultFramingErrorHandler *
     _EUSART1_DefaultOverrunErrorHandler *
     _EUSART1_RxDataHandler *
   _EUSART1_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK14           88      0       0      32        0.0%
BANK14              88      0       0      33        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1C      58       1       93.6%
BITBIGSFRhhhl       31      0       0      35        0.0%
BITBIGSFRllllll     28      0       0      59        0.0%
BITBIGSFRllhhll     27      0       0      42        0.0%
BITBIGSFRhhllh      1B      0       0      36        0.0%
BITBIGSFRllllll     13      0       0      49        0.0%
BITBIGSFRllhhhh      F      0       0      41        0.0%
BITBIGSFRllllll      E      0       0      46        0.0%
BITBIGSFRhhhh        D      0       0      34        0.0%
BITBIGSFRllllll      A      0       0      57        0.0%
BITBIGSFRllllll      9      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRlllllh      3      0       0      45        0.0%
BITBIGSFRllllh       3      0       0      44        0.0%
BITBIGSFRllhl        3      0       0      43        0.0%
BITBIGSFRhhllll      2      0       0      39        0.0%
BITBIGSFRllllll      2      0       0      50        0.0%
BITBIGSFRhhllll      1      0       0      38        0.0%
BITBIGSFRhhllll      1      0       0      37        0.0%
BITBIGSFRllllll      1      0       0      54        0.0%
BITBIGSFRllllll      1      0       0      56        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      52        0.0%
BITBIGSFRllllll      1      0       0      47        0.0%
BITBIGSFRllllll      1      0       0      48        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRhhllll      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      58      60        0.0%
DATA                 0      0      58       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Apr 06 12:29:51 2022

                             _SPI1_ExchangeByte 17BA                        _eusart1TxBufferRemaining 0056  
                                            _CC 001F                                              l85 13D8  
                                            u20 17D0                                              u21 17CC  
                                            u60 1800                                              u61 17FA  
                                            u70 1802                                              u80 151E  
                                            u81 151A                                              u90 1550  
                                            u91 154C                              ?_SPI1_ExchangeByte 002E  
                                            _ok 0023                                              _pp 0021  
                               ??_retorneNumero 0036                             SPI_W@convertedValue 003B  
                                           l202 17B8                                             l115 179C  
                                           l124 185E                                             l221 1862  
                                           l315 1802                                             l333 14C8  
                                           l309 1452                                             l334 14E0  
                                           l328 155E                                             l600 17D4  
                                           l337 150C                                             l372 183A  
                                           l196 177E                                             l381 181C  
                                           l630 16EA                                             l615 1628  
                                           l375 1830                                             l199 17EC  
                                           l384 1826                                             l378 1844  
                                           l555 184E                                             l467 14B4  
                                           l652 10F6                                             l741 15AC  
                                           l591 1342                                             l656 165E  
                                           l587 1738                                             l659 1812  
                                           l597 17C0                                             l599 17D0  
                                           _RB4 007C74                                             _RE0 007C88  
                                           u100 14C8                                             u101 14C4  
                                           u110 14D8                                             u111 14D4  
                                           u120 1504                                             u121 1500  
                                           u210 12A4                                             u211 12A0  
                                           _PR2 000FBC                                             u600 0F1E  
                                           u601 0F1A                                             u610 0F5E  
                                           u611 0F5A                                             u620 0F6E  
                                           u621 0F6A                                             u630 0FBE  
                                           u631 0FBA                                             u640 0FCE  
                                           u641 0FCA                                             u650 1020  
                                           u490 1628                                             u651 101C  
                                           u491 1624                                             u660 1646  
                                           u661 1642                                             u760 1140  
                                           u761 113C                                             u770 116C  
                                           u771 1168                                             u780 1190  
                                           u781 118C                                             u790 11B6  
                                           u791 11B2                             ??_SPI1_ExchangeByte 0034  
                               _TMR2_Initialize 1780                                             tosl 000FFD  
                                           wreg 000FE8                    ?_ADCC_SetADIInterruptHandler 0034  
                                          l2010 1846                                            l2012 1454  
                                          l2020 13DA                                            l2014 14A2  
                                          l2030 1402                                            l2022 13DE  
                                          l2200 157C                                            l2016 14A6  
                                          l2040 1426                                            l2032 1406  
                                          l2024 13EA                                            l2120 16BE  
                                          l2130 0F1E                                            l2050 15FC  
                                          l2210 15A6                                            l2202 1588  
                                          l2018 14A8                                            l2042 144E  
                                          l2034 140A                                            l2026 13FA  
                                          l2122 16CA                                            l2140 0F6E  
                                          l2132 0F2E                                            l2052 160A  
                                          l2212 15A8                                            l2204 158C  
                                          l2036 140E                                            l2028 13FE  
                                          l2124 16DA                                            l2150 0FBE  
                                          l2142 0F7E                                            l2134 0F3A  
                                          l2126 0F08                                            l2054 160E  
                                          l2214 15AA                                            l2206 1590  
                                          l2038 141A                                            l2070 1766  
                                          l1600 14B8                                            l2160 100E  
                                          l2152 0FCE                                            l2144 0F8E  
                                          l2136 0F4E                                            l2128 0F0C  
                                          l2048 15F0                                            l2208 1592  
                                          l2080 177A                                            l2072 176A  
                                          l2240 1106                                            l2232 10F8  
                                          l1610 1504                                            l1602 14D8  
                                          l2162 1020                                            l2170 1084  
                                          l2154 0FDE                                            l2146 0F9A  
                                          l2138 0F5E                                            l1442 17BC  
                                          l1450 13A6                                            l2074 176E  
                                          l2066 175E                                            l2250 1120  
                                          l2242 1108                                            l2234 10FC  
                                          l1612 1508                                            l1604 14E2  
                                          l2172 1090                                            l2164 1054  
                                          l2156 0FEE                                            l2148 0FAE  
                                          l1460 13B4                                            l1452 13A8  
                                          l1444 1344                                            l2076 1772  
                                          l2068 1762                                            l2260 1180  
                                          l2252 112C                                            l2244 110A  
                                          l2236 1102                                            l1606 14F2  
                                          l1614 150A                                            l2174 10A4  
                                          l2166 1060                                            l2158 0FFA  
                                          l1470 1860                                            l1462 13B6  
                                          l1454 13AA                                            l1446 135C  
                                          l2078 1776                                            l2190 165C  
                                          l2182 162A                                            l2270 11BE  
                                          l2262 1190                                            l2254 1140  
                                          l2246 1110                                            l2238 1104  
                                          l1608 14F4                                            l2168 1070  
                                          l2176 10B4                                            l1480 17D6  
                                          l1464 13B8                                            l1456 13AC  
                                          l1448 137C                                            l1472 179E  
                                          l1536 185C                                            l2184 1646  
                                          l2272 11CA                                            l2264 1194  
                                          l2256 1150                                            l2248 1114  
                                          l1650 12A4                                            l1458 13B2  
                                          l1474 1716                                            l1466 1780  
                                          l2194 1804                                            l2186 1656  
                                          l2274 11D0                                            l2266 1198  
                                          l2258 116C                                            l1580 151E  
                                          l1572 17EE                                            l1652 12E4  
                                          l1476 1734                                            l1468 1794  
                                          l2268 11B6                                            l1590 1558  
                                          l1582 153E                                            l1654 12E8  
                                          l2198 1560                                            l1478 1736  
                                          l1592 155A                                            l1584 1540  
                                          l1576 150E                                            l2296 10D0  
                                          l1656 130C                                            l1648 1296  
                                          l1594 155C                                            l1586 1550  
                                          l1578 150E                                            l1658 1340  
                                          l1588 1554                                            l1598 14B8  
                                          l1990 181E                                            l1992 1814  
                                          l1994 1832                                            l1996 1828  
                                          l1998 183C                                            _LATA 000F83  
                                          _LATB 000F84                                            _LATC 000F85  
                                          _LATD 000F86                                            _LATE 000F87  
                                          _T2PR 000FBC                                            _PMD0 000EE1  
                                          _PMD1 000EE2                                            _PMD2 000EE3  
                                          _PMD3 000EE4                                            _PMD4 000EE5  
                                          _PMD5 000EE6                                            _TMR2 000FBB  
                                          _WPUA 000F10                                            _WPUB 000F18  
                                          _WPUC 000F20                                            _WPUD 000F25  
                                          _WPUE 000F2D                                __end_of_ADCC_ISR 1690  
                                 _EUSART1_Write 14B6                                            _main 10F8  
                                 ?_EUSART1_Read 002E                                            fsr1h 000FE2  
                                          fsr2h 000FDA                                            indf1 000FE7  
                                          indf2 000FDF                                            fsr1l 000FE1  
                                          fsr2l 000FD9                                            btemp 0059  
                                          prodh 000FF4                                            prodl 000FF3  
                                          start 00D2                       __end_of_SPI1_ExchangeByte 17D6  
                fp__EUSART1_DefaultErrorHandler 0000                               ?_PalabraRecepcion 0035  
                                  ___param_bank 000000                              ??_PalabraRecepcion 0037  
                 __end_of_OSCILLATOR_Initialize 17EE                           _eusart1RxStatusBuffer 0001  
                                         _ADACQ 000F5C                                           _ADCAP 000F5D  
                                         _ADACT 000F56                                           ?_main 002E  
                                         _ADCLK 000F57                                           _ADCNT 000F67  
                                         _ADPCH 000F5F                                           _ADREF 000F58  
                                         _ADPRE 000F5E                                           _ADRPT 000F66  
              SPI1_Open@spi1UniqueConfiguration 0035                                           _T2CON 000FBD  
                                         _T2HLT 000FBE                                           _T2TMR 000FBB  
                                         _T2RST 000FC0                                           i2l234 00BE  
                                         i2l227 0062                                           i2l228 00BE  
                                         i2l229 009A                                           i2l360 1714  
                                         i2l346 15EA                                           i2l363 1866  
                                         i2l356 1292                                           i2l349 15EE  
                                         i2l366 1854                                           i2l552 168E  
                                         i2l369 185A                                           i2l558 1868  
                                         i2l738 175C                                           _OSCEN 000EDC  
                                         _TRISA 000F88                                           _TRISB 000F89  
                                         _TRISC 000F8A                                           _TRISD 000F8B  
                                         _TRISE 000F8C                                           _SPI_W 1560  
                          _EUSART1_Transmit_ISR 15AE                                 __end_of_fin_adc 175E  
                                         _datos 0019                                     ?_TMR2_Start 002E  
                                ?_EUSART1_Write 002E                                           pclath 000FFA  
                                         pclatu 000FFB                                           tablat 000FF5  
                                ??_EUSART1_Read 0034                                           ttemp5 005A  
                                         ttemp6 005D                                           ttemp7 0061  
                                         status 000FD8                                           wtemp8 005A  
         fp__EUSART1_DefaultFramingErrorHandler 0000      __end_of_EUSART1_DefaultFramingErrorHandler 1868  
          ??_EUSART1_DefaultFramingErrorHandler 002E             ?_EUSART1_DefaultFramingErrorHandler 002E  
            _EUSART1_DefaultFramingErrorHandler 1866                                _tengocambiodefdM 162A  
                               __initialization 1690                      __end_of_EUSART1_Initialize 1454  
                                  __end_of_main 11DE                         __end_of_TMR2_Initialize 179E  
                   ?_INTERRUPT_InterruptManager 002E                               _tengo_dato_serial 0024  
                                        ??_main 0043                                   __activetblptr 000003  
                                        ?_SPI_W 003B                           ?_EUSART1_Transmit_ISR 002E  
                                _convertedValue 001D                                          _ADACCH 000F71  
                                        _ADACCL 000F70                                          _ADCON0 000F60  
                                        _ADCON1 000F59                                          _ADCON2 000F5A  
                                        _ADCON3 000F5B                                          _ADERRH 000F6F  
                                        _ADERRL 000F6E                                          _ADLTHH 000F6B  
                                        _ADLTHL 000F6A                                          _ADRESH 000F64  
                                        _ADRESL 000F63                                          _ADSTAT 000F65  
                                        _ADUTHH 000F6D                                          _ADUTHL 000F6C  
                                        _ANSELA 000F11                                          _ANSELB 000F19  
                                        _ANSELC 000F21                                          _ANSELD 000F26  
                                        _ANSELE 000F2E                                          _RC1REG 000F99  
                                        _RC1STA 000F9D                                          _RC3PPS 000EFA  
                                        _RC5PPS 000EFC                                          _ODCONA 000F0F  
                                        _ODCONB 000F17                                          _ODCONC 000F1F  
                                        _ODCOND 000F24                                          _ODCONE 000F2C  
                                        _RC7PPS 000EFE                                          i2l2000 16EC  
                                        i2l2002 16FC                                          i2l2004 16FE  
                                        i2l2100 11DE                                          i2l2006 170E  
                                        i2l2110 1230                                          i2l2102 11EE  
                                        i2l2008 1712                                          i2l2112 123E  
                                        i2l2104 11FC                                          i2l2114 1256  
                                        i2l2106 120A                                          i2l2060 1752  
                                        i2l2044 1850                                          i2l2116 1272  
                                        i2l2108 1222                                          i2l2220 0038  
                                        i2l2062 1756                                          i2l2046 1856  
                                        i2l2118 128E                                          i2l2230 00B6  
                                        i2l2222 0046                                          i2l2064 175A  
                                        i2l2056 173A                                          i2l2224 0070  
                                        i2l2216 001A                                          i2l2058 1740  
                                        i2l2082 1660                                          i2l2090 15BE  
                                        i2l2226 007E                                          i2l2218 0028  
                                        i2l2084 1664                                          i2l2092 15CE  
                                        i2l2228 00A8                                          i2l2086 1676  
                                        i2l2094 15D0                                          i2l2096 15E0  
                                        i2l2088 15AE                                          i2l2098 15E4  
                                        _INLVLA 000F0D                                          _INLVLB 000F15  
                                        _INLVLC 000F1D                                          _INLVLD 000F22  
                                        _INLVLE 000F2A                                          _INTEPT 0025  
                                        _OSCFRQ 000EDE                                          _RX1PPS 000EB5  
                                        _TX1REG 000F9A                                          _TX1STA 000F9E  
                             __end_of_SPI1_Open 1344                                          _bloque 002C  
                      ?_EUSART1_SetErrorHandler 0034                                          clear_0 16AE  
                                        _select 0057                                          isa$std 000001  
              ??_EUSART1_SetOverrunErrorHandler 0036                 ?_EUSART1_SetOverrunErrorHandler 0034  
                                     ??_fin_adc 002E                                       ?_ADCC_ISR 002E  
                               _ADCC_Initialize 1454                                  _PMD_Initialize 179E  
                                  __pdataCOMRAM 0057                                    __mediumconst 0000  
                                        tblptrh 000FF7                                          tblptrl 000FF6  
                                        tblptru 000FF8                                 ??_EUSART1_Write 0034  
   ADCC_SetADIInterruptHandler@InterruptHandler 0034                                 _eusart1RxBuffer 0009  
                               _eusart1TxBuffer 0011                               _SYSTEM_Initialize 175E  
                                    __accesstop 0060                         __end_of__initialization 16B4  
                            ?_SYSTEM_Initialize 002E                                   ___rparam_used 000001  
                                 __end_of_SPI_W 15AE                   __end_of_EUSART1_RxDataHandler 1716  
                                __pcstackCOMRAM 002E                             ??_SYSTEM_Initialize 0036  
                             ??_SPI1_Initialize 0034                                  SPI_W@adc12bits 003F  
                              ?_TMR2_Initialize 002E                          __end_of_PMD_Initialize 17BA  
                         SPI1_ExchangeByte@data 0034                            __end_of_EUSART1_Read 1560  
                                    ??_ADCC_ISR 0030                          ??_EUSART1_Transmit_ISR 002E  
                            _spi1_configuration 0F01                                         ??_SPI_W 003D  
                           PalabraRecepcion@rec 0035                     __end_of_EUSART1_Receive_ISR 1294  
                           tengocambiodefdM@rec 0034                       __end_of_SYSTEM_Initialize 1780  
                                 _eusart1RxHead 0029                                   _eusart1TxHead 002B  
                                 _eusart1RxTail 0028                                   _eusart1TxTail 002A  
             _EUSART1_TxDefaultInterruptHandler 0054                 ??_EUSART1_SetRxInterruptHandler 0036  
                                    __pnvCOMRAM 004A                 __end_of_EUSART1_SetErrorHandler 1846  
                       __end_of_ADCC_Initialize 14B6                                         _ADFLTRH 000F73  
                                       _ADFLTRL 000F72                                         _ADPREVH 000F62  
                                       _ADPREVL 000F61                                         _ADSTPTH 000F69  
                                       _ADSTPTL 000F68                                 ?_PMD_Initialize 002E  
        __end_of_EUSART1_SetFramingErrorHandler 183C                  _EUSART1_SetFramingErrorHandler 1832  
                         __end_of_retorneNumero 1814                        __end_of_tengocambiodefdM 1660  
                  ?_EUSART1_DefaultErrorHandler 002E                                         _SP1BRGH 000F9C  
                                       _SP1BRGL 000F9B                                         _OSCCON1 000ED8  
                                       _OSCCON3 000EDA                          PalabraRecepcion@datorx 0039  
                                       i2u50_40 1676                                         i2u50_41 1672  
                                       i2u51_48 167C                                         i2u52_40 15BE  
                                       i2u51_49 168E                                         i2u52_41 15BA  
                                       i2u53_40 15E0                                         i2u53_41 15DC  
                                       i2u54_40 11FC                                         i2u54_41 11F8  
                                       _OSCTUNE 000EDD                                         i2u71_40 0070  
                                       i2u70_48 004C                                         i2u71_41 006C  
                                       i2u70_49 005E                                         i2u48_40 170E  
                                       i2u56_40 1230                                         i2u55_48 1210  
                                       i2u72_40 007E                                         i2u48_41 170A  
                                       i2u56_41 122C                                         i2u55_49 1222  
                                       i2u72_41 007A                                         i2u58_40 1272  
                                       i2u57_48 1244                                         i2u74_40 00A8  
                                       i2u73_48 0084                                         i2u58_41 126E  
                                       i2u57_49 1256                                         i2u74_41 00A4  
                                       i2u73_49 0096                                         i2u75_40 00B6  
                                       i2u67_40 0028                                         i2u75_41 00B2  
                                       i2u67_41 0024                                         i2u59_48 1278  
                                       i2u68_40 0038                                         i2u59_49 128A  
                                       i2u68_41 0034                                         i2u69_40 0046  
                                       i2u69_41 0042                                         _SSP1ADD 000F93  
                                       _SLRCONA 000F0E                                         _SLRCONB 000F16  
                                       _SLRCONC 000F1E                                         _SLRCOND 000F23  
                                       _SLRCONE 000F2B                                         _SSP1BUF 000F92  
                                  ??_TMR2_Start 0034                                       SPI_W@data 0041  
                                       __Hparam 0000                                         __Lparam 0000  
                             ??_SPI1_WriteBlock 0039                    __end_of_inicializarRecepcion 16EC  
                                  __psmallconst 0F00                             _EUSART1_is_rx_ready 17EE  
                            __end_of_TMR2_Start 1860                                         __pcinit 1690  
                                       __ramtop 0F00                                         __ptext0 10F8  
                                       __ptext1 162A                                         __ptext2 1804  
                                       __ptext3 16BE                                         __ptext4 185C  
                                       __ptext5 175E                                         __ptext6 1780  
                                       __ptext7 1716                                         _fin_adc 173A  
                                       __ptext8 179E                                         __ptext9 1344  
                              retorneNumero@rec 0034                        SPI1_WriteBlock@blockSize 0037  
                         _OSCILLATOR_Initialize 17D6                                       _T2CONbits 000FBD  
                            _EUSART1_Initialize 13DA                        ??_PIN_MANAGER_Initialize 0034  
                                     _T2HLTbits 000FBE                   ??_EUSART1_DefaultErrorHandler 002E  
                          end_of_initialization 16B4                            ?_EUSART1_is_rx_ready 002E  
                                     _T2RSTbits 000FC0                             ?_EUSART1_Initialize 002E  
                   _EUSART1_OverrunErrorHandler 004E           __end_of_EUSART1_SetRxInterruptHandler 1828  
                 _EUSART1_SetRxInterruptHandler 181E                                         postinc0 000FEE  
                              ?_ADCC_Initialize 002E                                       _SPI1_Open 1294  
                          ??_EUSART1_Initialize 0036                                      fp__fin_adc 0000  
           __end_of_ADCC_SetADIInterruptHandler 1850                     _ADCC_SetADIInterruptHandler 1846  
                                     _TRISCbits 000F8A                         fp__EUSART1_Transmit_ISR 0000  
                           EUSART1_Write@txData 0034                           ??_EUSART1_is_rx_ready 0034  
                 ??_ADCC_SetADIInterruptHandler 0036                                 _SPI1_Initialize 1716  
                                  _EUSART1_Read 150E                    __end_of_INTERRUPT_Initialize 1864  
                ??_ADCC_DefaultInterruptHandler 002E                                      ?_SPI1_Open 002E  
                                 __pidataCOMRAM 1864                          ?_OSCILLATOR_Initialize 002E  
                           start_initialization 1690                                _PalabraRecepcion 0F06  
 EUSART1_SetRxInterruptHandler@interruptHandler 0034   EUSART1_SetTxInterruptHandler@interruptHandler 0034  
                          _inicializarRecepcion 16BE                           __end_of_EUSART1_Write 150E  
                        fp__EUSART1_Receive_ISR 0000                                       _adc12bits 001B  
                              ??_PMD_Initialize 0034                           _EUSART1_RxDataHandler 16EC  
                ?_EUSART1_SetRxInterruptHandler 0034                                  _eusart1RxCount 0027  
                                   __pbssCOMRAM 0001                               ?_tengocambiodefdM 0034  
             _EUSART1_RxDefaultInterruptHandler 0052                              ??_tengocambiodefdM 0036  
                       __end_of_SPI1_Initialize 173A                           ?_inicializarRecepcion 0034  
                               _SPI1_WriteBlock 15F0                 ??_EUSART1_SetTxInterruptHandler 0036  
              ??_EUSART1_SetFramingErrorHandler 0036                 ?_EUSART1_SetFramingErrorHandler 0034  
                        _PIN_MANAGER_Initialize 1344                                       __pintcode 0008  
                                   ??_SPI1_Open 0034                    ??_INTERRUPT_InterruptManager 0030  
                                      ?_fin_adc 002E                                        _ADCC_ISR 1660  
                                      _BAUD1CON 000F9F                                     __smallconst 0F00  
         fp__EUSART1_DefaultOverrunErrorHandler 0000      __end_of_EUSART1_DefaultOverrunErrorHandler 1856  
          ??_EUSART1_DefaultOverrunErrorHandler 002E             ?_EUSART1_DefaultOverrunErrorHandler 002E  
            _EUSART1_DefaultOverrunErrorHandler 1850                            _EUSART1_ErrorHandler 004C  
                       _EUSART1_SetErrorHandler 183C                                        _T2CLKCON 000FBF  
                          _INTERRUPT_Initialize 1860         EUSART1_SetErrorHandler@interruptHandler 0034  
                                      _PIE1bits 000EC3                                        _PIE3bits 000EC5  
                                      _PIR1bits 000ECB                                        _PIR3bits 000ECD  
                                      _PIR4bits 000ECE                          ?_EUSART1_RxDataHandler 002E  
                                      _SSP1CON1 000F96                                        _SSP1CON2 000F97  
                                      _SSP1STAT 000F95                                      _ADCON0bits 000F60  
                                    _ADCON1bits 000F59                                      _ADCON2bits 000F5A  
                                    _ADCON3bits 000F5B                         __end_of_SPI1_WriteBlock 162A  
                        ??_inicializarRecepcion 0036                                ?_SPI1_Initialize 002E  
                         ?_INTERRUPT_Initialize 002E                               ??_TMR2_Initialize 0034  
                         EUSART1_Read@readValue 0034                                      _ADSTATbits 000F65  
         __end_of_EUSART1_SetTxInterruptHandler 181E                   _EUSART1_SetTxInterruptHandler 1814  
                                      __Hrparam 0000                        __end_of_PalabraRecepcion 10F8  
                                      __Lrparam 0000                         inicializarRecepcion@rec 0034  
                       ??_OSCILLATOR_Initialize 0034                       ??_EUSART1_SetErrorHandler 0036  
           __end_of_EUSART1_DefaultErrorHandler 185C                     _EUSART1_DefaultErrorHandler 1856  
                   __end_of_EUSART1_is_rx_ready 1804                                   _retorneNumero 1804  
                                      __ptext10 17D6                                        __ptext11 1860  
                                      __ptext20 1560                                        __ptext12 13DA  
                                      __ptext21 15F0                                        __ptext13 1814  
                                      __ptext30 11DE                                        __ptext22 17BA  
                                      __ptext14 181E                                        __ptext31 1850  
                                      __ptext23 1294                                        __ptext15 1828  
                                      __ptext32 1866                                        __ptext24 0F06  
                                      __ptext16 1832                                        __ptext33 1856  
                                      __ptext25 17EE                                        __ptext17 183C  
                                      __ptext34 16EC                                        __ptext26 14B6  
                                      __ptext18 1454                                        __ptext35 1660  
                                      __ptext27 150E                                        __ptext19 1846  
                                      __ptext36 1868                                        __ptext37 173A  
                                      __ptext29 15AE                                        __ptext38 0000  
                                  _SSP1CON1bits 000F96                                      _RC1STAbits 000F9D  
                     _ADCC_ADI_InterruptHandler 004A  EUSART1_SetOverrunErrorHandler@interruptHandler 0034  
                                      isa$xinst 000000                                        int$flags 0059  
            __end_of_INTERRUPT_InterruptManager 00D2                      _INTERRUPT_InterruptManager 0008  
                                      main@rece 0044                     _EUSART1_FramingErrorHandler 0050  
                           _EUSART1_Receive_ISR 11DE                                  ?_retorneNumero 0034  
                                    _INTCONbits 000FF2                                ?_SPI1_WriteBlock 0035  
                          SPI1_WriteBlock@block 0035                          ??_INTERRUPT_Initialize 0034  
          __end_of_ADCC_DefaultInterruptHandler 186A                    _ADCC_DefaultInterruptHandler 1868  
                                      intlevel2 0000                            ?_EUSART1_Receive_ISR 002E  
                       ?_PIN_MANAGER_Initialize 002E          __end_of_EUSART1_SetOverrunErrorHandler 1832  
                _EUSART1_SetOverrunErrorHandler 1828                    __end_of_EUSART1_Transmit_ISR 15F0  
EUSART1_SetFramingErrorHandler@interruptHandler 0034                  ?_EUSART1_SetTxInterruptHandler 0034  
                            _eusart1RxLastError 0026                             SPI1_WriteBlock@data 0039  
                                    _SSP1DATPPS 000EB8                                      _SSP1CLKPPS 000EB7  
                                    _TX1STAbits 000F9E                                      _TMR2_Start 185C  
                         ??_EUSART1_Receive_ISR 002E                  __end_of_PIN_MANAGER_Initialize 13DA  
                             ??_ADCC_Initialize 0036                 fp__ADCC_DefaultInterruptHandler 0000  
                 ?_ADCC_DefaultInterruptHandler 002E                         ??_EUSART1_RxDataHandler 002E  
                    __end_of_spi1_configuration 0F05  
